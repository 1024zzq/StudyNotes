<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://doc.zzq8.cn/atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://doc.zzq8.cn/</id>
  <title>Piglet</title>
  <subtitle>自我提升笔记，记录并输出一切能让自己提升的知识。</subtitle>
  <icon>https://doc.zzq8.cn/favicon.ico</icon>
  <updated>2024-06-05T16:52:23.596Z</updated>
  <generator>@vuepress/plugin-feed</generator>
  <link rel="self" href="https://doc.zzq8.cn/atom.xml"/>
  <link rel="alternate" href="https://doc.zzq8.cn/"/>
  <category term="工具"/>
  <category term="使用指南"/>
  <entry>
    <title type="text">博客文章样例2</title>
    <id>https://doc.zzq8.cn/posts/2024-03-02-blog_example2.html</id>
    <link href="https://doc.zzq8.cn/posts/2024-03-02-blog_example2.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[<p>博客文章内容，支持 Markdown 和 HTML 语言。</p>
]]></summary>
    <content type="html"><![CDATA[<p>博客文章内容，支持 Markdown 和 HTML 语言。</p>
]]></content>
    <category term="工具"/>
    <published>2024-03-02T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">博客文章样例</title>
    <id>https://doc.zzq8.cn/posts/2024-03-01-blog_example.html</id>
    <link href="https://doc.zzq8.cn/posts/2024-03-01-blog_example.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[<p>博客文章内容，支持 Markdown 和 HTML 语言。</p>
]]></summary>
    <content type="html"><![CDATA[<p>博客文章内容，支持 Markdown 和 HTML 语言。</p>
]]></content>
    <category term="使用指南"/>
    <published>2024-03-01T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Study List</title>
    <id>https://doc.zzq8.cn/code/StudyList.html</id>
    <link href="https://doc.zzq8.cn/code/StudyList.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[
<blockquote>
<p>知行合一 ！！！慢慢来比较快！自己写点属于自己的 MD 笔记。</p>
<p>具体学习路线看 鱼皮的 Java 学习路线导图， 主次关系需要分清楚！
<code>我更希望自己是在不断向上爬山，而不是重复劳动、绕山而行。</code>虽然后者更轻松，但我看不到山顶的风光，也没有成就感，曾经的热爱就慢慢消失了。</p>
<p>解释：✔ 代表现在正在做！加油！！！及时制定近期目标，避免无头苍蝇！不要麻木！！！</p>
<p><mark>可执行的阶段性目标计划+严格的执行</mark></p>
<hr>
<p>学习的重点之一是习惯的养成，很多在职程序员没有写博客、做总结的习惯，导致他们工作两三年后水平停滞不前，最终工资被倒挂，甚至无力跳槽，这其中有一个重要的原因就是他们在入门的时候没有养成良好的学习习惯，比如看书必须记笔记，有了感悟最好写博客记录一下，发现知识盲区一定要去搜索权威文档而不是听信二手知识等等。</p>
</blockquote>]]></summary>
    <content type="html"><![CDATA[
<blockquote>
<p>知行合一 ！！！慢慢来比较快！自己写点属于自己的 MD 笔记。</p>
<p>具体学习路线看 鱼皮的 Java 学习路线导图， 主次关系需要分清楚！
<code>我更希望自己是在不断向上爬山，而不是重复劳动、绕山而行。</code>虽然后者更轻松，但我看不到山顶的风光，也没有成就感，曾经的热爱就慢慢消失了。</p>
<p>解释：✔ 代表现在正在做！加油！！！及时制定近期目标，避免无头苍蝇！不要麻木！！！</p>
<p><mark>可执行的阶段性目标计划+严格的执行</mark></p>
<hr>
<p>学习的重点之一是习惯的养成，很多在职程序员没有写博客、做总结的习惯，导致他们工作两三年后水平停滞不前，最终工资被倒挂，甚至无力跳槽，这其中有一个重要的原因就是他们在入门的时候没有养成良好的学习习惯，比如看书必须记笔记，有了感悟最好写博客记录一下，发现知识盲区一定要去搜索权威文档而不是听信二手知识等等。</p>
</blockquote>
<h3>一、主线（连续空余时间进行，如周末）</h3>
<blockquote>
<p>Regain your confidence!</p>
</blockquote>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> upupor (单体博客按照图片功能点全走通)</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 若依（觉得先学，因为广泛性 + 更容易入手 + 教程多）【已下视频到本地】</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> <strong>八股</strong> Fishing at work. Especially JavaGuide 《Java面试指北》</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 过牛客错题</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> LeetCode 75 题</label></li>
</ul>
<p>立长志？  多邻国，单词？   最迟转正后加入知识星球</p>
<h3>二、夯实（日常穿插进行，如每天早上）</h3>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 以求职为导向来学习 <strong>八股文</strong> ForExample-JavaGuide（到一定度可入下知识星球！）</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> LeetCode 热题 HOT &amp;&amp; 精选 TOP</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 牛客选择题刷完（<strong>+SQL</strong>） &amp;&amp; 面试题过完</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> <strong>MySQL（45 讲专栏）</strong>  例如28讲 读写分离</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 有必要把 eDiary 和 ppt 过一遍，实例变量都不知道！联合 goodnotes 假如 TODO 清单！</label></li>
</ul>
<h3>三、项目经验（周末）</h3>
<blockquote>
<p><a href="https://www.bilibili.com/video/BV1PG4y1s7io/?spm_id_from=333.788&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">鱼皮有 b站 的项目评测！看完再决定要不要做！！！</a>
通过项目学习还是很不错的：边做项目边学新东西学的更快，记得才能更深</p>
</blockquote>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> <code>若依</code>（很多公司在用！例如邓凯他们）（Boss任职资格 有若依框架使用经验者优先 ）但是看了下不知道怎么开头系统学，盲目学比较费时间</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> 博客（因为整过一个初步的，所以后面的可以对比着点来学习）</label>
<ul>
<li>参考例如 <a href="https://gitee.com/moxi159753/mogu_blog_v2" target="_blank" rel="noopener noreferrer">蘑菇</a> 这些技术栈很全，还是很值得去学习的</li>
</ul>
</li>
</ul>
<h3>四、其它</h3>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> JVM（康师傅视频 + 周志明Book + JavaGuide）</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> <a href="https://oschina.gitee.io/learn-git-branching/" target="_blank" rel="noopener noreferrer">Git 游戏</a></label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> MongoDB</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> Netty（网络通信、NIO、分布式都有帮助）</label></li>
</ul>
<p><strong>平时：可以多看看别人的博客网站，个人经历分享！（例如 JavaGuide 就很有指导意义）</strong></p>
<h3>Finish：</h3>
<blockquote>
<p>8小时以内求生存，8小时以外求发展，做五休二</p>
<p>30岁以前拼命做加法，30岁以后做减法。以后总要给父母寄钱，给女朋友买个苹果手机电脑</p>
<h4>三分钟热度怎么解决啊</h4>
<p>zhangsan：我是靠打卡，背单词打卡，学习做笔记然后同步到 github 小绿点打卡，看书用微信读书做任务打卡。不知不觉坚持两年了</p>
</blockquote>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> ...</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> <a href="https://javaguide.cn/database/sql/sql-syntax-summary.html" target="_blank" rel="noopener noreferrer">Guide-MySQL</a> 过完整个 SQL catalog</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> <code>谷粒商城</code>【Unknown ~ 2023/2】 学到很多尤其是高级篇，多看笔记巩固</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> SpringCloud &amp; Alibaba (周阳 Zookeeper etc.)【unknown】</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> JUC（周阳 大厂面试）【2022/11/29 】</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> JavaGuide 干货，需多过两遍【unknown】</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> SpringBoot 再过一遍视频啃源码 雷神  写好自动配置笔记   26/3=8 day  22/2/6二刷现在三刷   争取三月初完结   简单啃了前面</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> 黑马点评 - redis 那个点评项目【学了开头，后面学不进觉得用不到暂时搁置等需要再学】</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" disabled="disabled"><label class="task-list-item-label" for="task-item-24"> <a href="../RuoYi/RuoYi">若依</a>【学了SpringSecurity, 及其部分代码】</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> <a href="../upupor/upupor">upupor</a>【学了事件驱动】</label></li>
</ul>
<h1>慢就是快</h1>
<blockquote>
<p><a href="https://javaguide.cn/high-quality-technical-articles/advanced-programmer/the-growth-strategy-of-the-technological-giant.html#_2-4-%E6%A1%88%E4%BE%8B%E5%B0%8F%E7%BB%93" target="_blank" rel="noopener noreferrer">程序员的技术成长战略</a>：<mark>以此为终生指导！</mark></p>
</blockquote>
<h3>以终为始是牛人和普通人的一大区别。</h3>
<figure><img src="http://images.zzq8.cn/img/format,png-20230309231833871.png" alt="以终为始" tabindex="0" loading="lazy"><figcaption>以终为始</figcaption></figure>
<h3><a class="header-anchor" href="#学习金字塔和刻意训练"><span></span></a><a href="https://javaguide.cn/high-quality-technical-articles/advanced-programmer/the-growth-strategy-of-the-technological-giant.html#%E4%B8%89%E3%80%81%E5%AD%A6%E4%B9%A0%E9%87%91%E5%AD%97%E5%A1%94%E5%92%8C%E5%88%BB%E6%84%8F%E8%AE%AD%E7%BB%83" target="_blank" rel="noopener noreferrer">学习金字塔和刻意训练</a></h3>
<p><strong>人与人之间的先天身体其实都差不多，但是后天身体素质和能力有差异，这些差异，很大程度是由后天对身体和大脑的训练质量、频度和强度所造成的。</strong></p>
<p>明白这个道理之后，心智成熟和自律的人就会对自己进行持续地 <strong>刻意训练</strong> 。</p>
<figure><img src="http://images.zzq8.cn/img/format,png-20230309231836811.png" alt="学习金字塔" tabindex="0" loading="lazy"><figcaption>学习金字塔</figcaption></figure>
<h1>面试 Extra</h1>
<blockquote>
<p>由于是社招了，主打一个项目经验！！！     把简历2个项目吃透！把用到的技术点融到项目里面</p>
</blockquote>
<p>学习：实操为主  多做笔记</p>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> 牛客 5 道（10 Minute） 加上检查（10 Minute）- 需答对 5 题才能收工</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> 一个 八股 模块 / MySQL（45 讲专栏） /  梳理笔记 &amp; 根据牛客八股针对性  自我面试（最好派个人问 <strong>openai 模拟面试官 &amp; 牛客AI面试</strong>）</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> 八股视频</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> 找个牛客面试，复制下来本地一个个答</label></li>
</ul>
<p>ps：八股搞的差不多了的话，我觉得还是要回归项目上的！简历上的项目  一定要有项目抛砖给面试官去问的</p>
]]></content>
    <published>2024-04-13T08:39:03.000Z</published>
  </entry>
  <entry>
    <title type="text"></title>
    <id>https://doc.zzq8.cn/code/TODO.html</id>
    <link href="https://doc.zzq8.cn/code/TODO.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[<p>https://newzone.top/</p>
<p>既有 docify（有目录！！！）    又搞的 vuepress 是我喜欢的样子！！！</p>
<p>https://theme-hope.vuejs.press/zh/demo/projects.html</p>
<p>全部值得一过，有很多优秀的个人</p>
<ul>
<li>mac CLI git 如何更灵活的像 GUI</li>
</ul>
]]></summary>
    <content type="html"><![CDATA[<p>https://newzone.top/</p>
<p>既有 docify（有目录！！！）    又搞的 vuepress 是我喜欢的样子！！！</p>
<p>https://theme-hope.vuejs.press/zh/demo/projects.html</p>
<p>全部值得一过，有很多优秀的个人</p>
<ul>
<li>mac CLI git 如何更灵活的像 GUI</li>
</ul>
]]></content>
    <published>2024-05-15T15:01:16.000Z</published>
  </entry>
  <entry>
    <title type="text">快排（分治思想）</title>
    <id>https://doc.zzq8.cn/code/408-DSA/%E5%BF%AB%E6%8E%92%EF%BC%88%E5%88%86%E6%B2%BB%E6%80%9D%E6%83%B3%EF%BC%89.html</id>
    <link href="https://doc.zzq8.cn/code/408-DSA/%E5%BF%AB%E6%8E%92%EF%BC%88%E5%88%86%E6%B2%BB%E6%80%9D%E6%83%B3%EF%BC%89.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[
<blockquote>
<p>前言：二分<code>查找</code>  查找需要基于排序好的集合。排序算法是排序，查找是查找   勿混淆！</p>
<p>https://www.acwing.com/solution/content/16777/</p>
<p><a href="https://www.acwing.com/blog/content/31431/" target="_blank" rel="noopener noreferrer">【Java版本】常用代码模板1——基础算法 + 模板题参考实现</a></p>
</blockquote>
<p>快速排序（Quicksort）是对冒泡排序的一种改进，借用了分治的思想</p>]]></summary>
    <content type="html"><![CDATA[
<blockquote>
<p>前言：二分<code>查找</code>  查找需要基于排序好的集合。排序算法是排序，查找是查找   勿混淆！</p>
<p>https://www.acwing.com/solution/content/16777/</p>
<p><a href="https://www.acwing.com/blog/content/31431/" target="_blank" rel="noopener noreferrer">【Java版本】常用代码模板1——基础算法 + 模板题参考实现</a></p>
</blockquote>
<p>快速排序（Quicksort）是对冒泡排序的一种改进，借用了分治的思想</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> Solution</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> moveZeroes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">nums</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //二分</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        quickSort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nums,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> quickSort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> l</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(l </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> r) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr[l</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> l</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> r</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> j){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 等效于do while</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 当数值小于分界值时持续遍历，直到找到第一个大于等于分界值的索引</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 如果是逆序则调整两个while循环</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> mid);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> mid);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> j) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> temp</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr[i];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                arr[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr[j];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                arr[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        quickSort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr, l, j);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        quickSort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr,j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, r);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol>
<li>index 0 作为中间点</li>
</ol>
<p>快速排序当我们把基准值设置在左边时，为什么要从右边先开始找？</p>
<p>当基准值位于左边时，我们希望先从右边开始查找。这是因为我们需要找到一个比基准值小的元素，以便将其放到基准值左边的子数组中。如果我们从左边开始查找，可能会导致在找到比基准值小的元素之前，错过了一些比基准值大的元素，从而破坏了划分的准确性（XD: 想象要确保基准点左边都是小的 右边是大于的）</p>
<p>也可以像下面这样，无所谓左边出发右边出发了应该！   具体看acwing
实测while这里这么写不行：<code>Time Limit Exceeded</code></p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> quickSort</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> q[]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> l</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> r){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (l </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> r) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   //l &gt;= r 看个人习惯都是可以的  l == r 也行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> l</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> q[l </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  //这里取中间点，避免了下面while多层判断</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (q[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> x) i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (q[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> x) j</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(q</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    quickSort</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(q</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> l</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    quickSort</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(q</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> r)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> mid){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    nums[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">^=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nums[mid]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    nums[mid] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">^=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nums[i]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    nums[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">^=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nums[mid]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>必须修改成下面这样，为什么？？？  这里 i j 先走谁都行</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> q[l </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  //这里取中间点，避免了下面while多层判断</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    do</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> while</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (q[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> x)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    do</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> while</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (q[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> x)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(q</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TODO 未完成，无法聚焦思路捋顺</p>
<p>代码一：
int i = l, j = r, x = q[l + r &gt;&gt; 1]; //这里取中间点，避免了下面while多层判断
while (i &lt; j){
while (q[i] &lt; x) i++;
while (q[j] &gt; x) j--;
if (i &lt; j) swap(q,i, j);
}</p>
<p>代码二：
int i = l - 1, j = r + 1, x = q[l + r &gt;&gt; 1];
while(i &lt; j)
{
do i++; while(q[i] &lt; x);
do j--; while(q[j] &gt; x);
if(i &lt; j) swap(q[i], q[j]);
}</p>
<p>他们的区别是什么，为什么代码一会超时 代码二不会。这代码是快速排序的部分代码</p>
<h1>DP</h1>
<blockquote>
<p><a href="https://leetcode.cn/problems/longest-increasing-subsequence/" target="_blank" rel="noopener noreferrer">300. 最长递增子序列</a></p>
</blockquote>
<h2>问题建模（求解关键）</h2>
<ol>
<li>定义状态-读题问什么 [最长递增子序列]   （长度）</li>
<li>状态转移 （if 怎么走，保证求解的过程形成一个逻辑上的有向无环图）</li>
</ol>
]]></content>
    <published>2024-04-13T08:39:03.000Z</published>
  </entry>
  <entry>
    <title type="text">HttpRequest</title>
    <id>https://doc.zzq8.cn/code/408-Network/HttpRequest.html</id>
    <link href="https://doc.zzq8.cn/code/408-Network/HttpRequest.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[
<p><a href="https://blog.csdn.net/f110300641/article/details/115342356" target="_blank" rel="noopener noreferrer">http 请求包含哪几个部分（请求行、请求头、请求体）</a></p>
<blockquote>
<p>这里放一些常见的，具体的去搜</p>
</blockquote>
<h2>一、General（请求行）</h2>
<ul>
<li>
<p>Request URL: http://127.0.0.1:8848/nacos/</p>
</li>
<li>
<p>Request Method: GET</p>
</li>
<li>
<p>Status Code:304（响应状态码）</p>
</li>
<li>
<p>Remote Address: 127.0.0.1:8848（HTTP请求的源地址）</p>
<ul>
<li>
<p>HTTP协议在三次握手时使用的就是这个Remote Address地址，在发送响应报文时也是使用这个Remote Address地址。因此，如果请求者伪造Remote Address地址，他将无法收到HTTP的响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。</p>
</li>
<li>
<p>如果http请求经过代理服务器转发，用户的真实ip会丢失，为了避免这个情况，代理服务器通常会增加一个叫做x_forwarded_for的头信息，把连接它的客户端IP（即你的上网机器IP）加到这个头信息里，这样就能保证网站的web服务器能获取到真实IP</p>
</li>
</ul>
</li>
<li>
<p>Referrer Policy: strict-origin-when-cross-origin（引用策略，有八种）</p>
<ul>
<li>Referer提供访问来源的信息，告诉服务器，用户在访问当前资源之前的位置，发生传场景包含：加载图片、样式文件、JS文件、请求。浏览器会将当前网址作为Referer字段，放在 HTTP 请求的头信息发送。</li>
</ul>
</li>
</ul>]]></summary>
    <content type="html"><![CDATA[
<p><a href="https://blog.csdn.net/f110300641/article/details/115342356" target="_blank" rel="noopener noreferrer">http 请求包含哪几个部分（请求行、请求头、请求体）</a></p>
<blockquote>
<p>这里放一些常见的，具体的去搜</p>
</blockquote>
<h2>一、General（请求行）</h2>
<ul>
<li>
<p>Request URL: http://127.0.0.1:8848/nacos/</p>
</li>
<li>
<p>Request Method: GET</p>
</li>
<li>
<p>Status Code:304（响应状态码）</p>
</li>
<li>
<p>Remote Address: 127.0.0.1:8848（HTTP请求的源地址）</p>
<ul>
<li>
<p>HTTP协议在三次握手时使用的就是这个Remote Address地址，在发送响应报文时也是使用这个Remote Address地址。因此，如果请求者伪造Remote Address地址，他将无法收到HTTP的响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。</p>
</li>
<li>
<p>如果http请求经过代理服务器转发，用户的真实ip会丢失，为了避免这个情况，代理服务器通常会增加一个叫做x_forwarded_for的头信息，把连接它的客户端IP（即你的上网机器IP）加到这个头信息里，这样就能保证网站的web服务器能获取到真实IP</p>
</li>
</ul>
</li>
<li>
<p>Referrer Policy: strict-origin-when-cross-origin（引用策略，有八种）</p>
<ul>
<li>Referer提供访问来源的信息，告诉服务器，用户在访问当前资源之前的位置，发生传场景包含：加载图片、样式文件、JS文件、请求。浏览器会将当前网址作为Referer字段，放在 HTTP 请求的头信息发送。</li>
</ul>
</li>
</ul>
<h2>二、Request Headers（请求头）</h2>
<ul>
<li>
<p><code>Accept</code>: text/html, application/xhtml+xml, application/xml;q=0.9, <em>/</em>;q=0.8</p>
<ul>
<li>请求头用来告知服务器 客户端可以处理的内容类型(用MIME类型来表示)，借助内容协商机制服务器从备选项中选择一项进行应用，并使用Content-Type应答头通知客户端它的选择。</li>
</ul>
</li>
<li>
<p>Accept-Encoding: gzip, deflate, br</p>
<ul>
<li>请求头用来告知服务器 客户端可以处理的编码方式</li>
</ul>
</li>
<li>
<p>Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en;q=0.7</p>
</li>
<li>
<p>Cache-Control: max-age=0</p>
</li>
<li>
<p>Content-Type：xxx         这个补充到笔记，请求也有这不光response</p>
</li>
<li>
<p>Connection: keep-alive</p>
<ul>
<li>面试常问1.1和1.0的区别。。有必要说明的是，HTTP/1.0 仍提供了长连接选项，即在请求头中加入<code>Connection: Keep-alive</code>。同样的，在 HTTP/1.1 中，如果不希望使用长连接选项，也可以在请求头中加入<code>Connection: close</code>，这样会通知服务器端：“我不需要长连接，连接成功后即可关闭”。</li>
</ul>
</li>
</ul>
]]></content>
    <published>2024-04-13T08:39:03.000Z</published>
  </entry>
  <entry>
    <title type="text">JWT</title>
    <id>https://doc.zzq8.cn/code/408-Network/JWT.html</id>
    <link href="https://doc.zzq8.cn/code/408-Network/JWT.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[
<blockquote>
<p>Token 续期问题面试杭州问过 长沙那个也问过！！！        个人认为是频繁点</p>
</blockquote>
<h2>项目实现</h2>
<h3>RuoYi</h3>
<p>感觉跟直接用最简单方式 UUID 存 Redis 一样的做法！！！</p>
<p>我感觉这里 JWT 都有点多余，顶多是看上去更安全？？？？（我感觉是单体项目其实完全可 Session 解决，这里用 Token 避免分布式共享?其实UUID也行？）</p>
<p>感觉RuoYi是只用Redis ttl实现的， Token的作用像是只充当了个UUID和Redis关联</p>
<blockquote>
<p>个人总结：</p>
<ul>
<li>axios配置请求、响应拦截器</li>
<li>前端 Session 存JWT解析数据为 UUID，   后端 Redis 对应这个 UUID 有 User 数据</li>
<li>靠 Redis 驱动，Redis 一过期就返回 401，前端响应拦截器就删 Session 重定向到 login.html</li>
</ul>
<h4># 前端存 Session 不过期</h4>
<p>解密后的数据只有 <strong>HEADER</strong>  "alg": "HS512"  &amp;  <strong>PAYLOAD</strong>  "login_user_key": "a667e3f6-5af2-4799-83d6-5c871507df08"</p>
<h4># 后端存 Redis 通过login_user_key对应，存用户信息 LoginUser.class</h4>
<p>后端如果redis过期，则返回状态 401</p>
<p>核心方法：<code>com.ruoyi.framework.web.service.TokenService#getLoginUser</code></p>
<p><code>com.ruoyi.framework.web.service.TokenService#verifyToken</code> 验证令牌有效期，相差不足20分钟，自动刷新Redis缓存</p>
</blockquote>]]></summary>
    <content type="html"><![CDATA[
<blockquote>
<p>Token 续期问题面试杭州问过 长沙那个也问过！！！        个人认为是频繁点</p>
</blockquote>
<h2>项目实现</h2>
<h3>RuoYi</h3>
<p>感觉跟直接用最简单方式 UUID 存 Redis 一样的做法！！！</p>
<p>我感觉这里 JWT 都有点多余，顶多是看上去更安全？？？？（我感觉是单体项目其实完全可 Session 解决，这里用 Token 避免分布式共享?其实UUID也行？）</p>
<p>感觉RuoYi是只用Redis ttl实现的， Token的作用像是只充当了个UUID和Redis关联</p>
<blockquote>
<p>个人总结：</p>
<ul>
<li>axios配置请求、响应拦截器</li>
<li>前端 Session 存JWT解析数据为 UUID，   后端 Redis 对应这个 UUID 有 User 数据</li>
<li>靠 Redis 驱动，Redis 一过期就返回 401，前端响应拦截器就删 Session 重定向到 login.html</li>
</ul>
<h4># 前端存 Session 不过期</h4>
<p>解密后的数据只有 <strong>HEADER</strong>  "alg": "HS512"  &amp;  <strong>PAYLOAD</strong>  "login_user_key": "a667e3f6-5af2-4799-83d6-5c871507df08"</p>
<h4># 后端存 Redis 通过login_user_key对应，存用户信息 LoginUser.class</h4>
<p>后端如果redis过期，则返回状态 401</p>
<p>核心方法：<code>com.ruoyi.framework.web.service.TokenService#getLoginUser</code></p>
<p><code>com.ruoyi.framework.web.service.TokenService#verifyToken</code> 验证令牌有效期，相差不足20分钟，自动刷新Redis缓存</p>
</blockquote>
<p>借助了 Redis</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> refreshToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">LoginUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> loginUser){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    loginUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setLoginTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    loginUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setExpireTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">loginUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLoginTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> expireTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> MILLIS_MINUTE);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 根据uuid将loginUser缓存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> userKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getTokenKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">loginUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getToken</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    redisCache</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setCacheObject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(userKey, loginUser, expireTime, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">MINUTES</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>后端设置 Token</h4>
<ol>
<li>存Redis用户信息</li>
<li>登录完成最终返回了一个真正的token字符串 <code>return tokenService.createToken(loginUser);</code></li>
<li>Token 放在前端 session 里</li>
</ol>
<p>| Admin-Token | eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6ImI1OWNlOTUyLWQwOTctNGNmOC1hYzYwLTU1MzdlOTBhNDg5ZSJ9.YxyKCvcLmj2EvWXVSjop1b2cCrW-j5PLtVmSMvL1V6H1PZUZCSxpcSInnp3BT1Okt48DJ-b_QAG7--kRjRhuKw |
|</p>
]]></content>
    <published>2024-04-13T08:39:03.000Z</published>
  </entry>
  <entry>
    <title type="text">Nginx</title>
    <id>https://doc.zzq8.cn/code/408-Network/Nginx.html</id>
    <link href="https://doc.zzq8.cn/code/408-Network/Nginx.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[
<blockquote>
<p><a href="https://www.kuangstudy.com/bbs/1377454518035292162" target="_blank" rel="noopener noreferrer">狂神Nginx学习笔记</a></p>
<p>Nginx 三大作用：1）动静分离  2）反向代理  3）负载均衡</p>
<p>特点：一旦启动永远不需要重启，但是我们需要重新加载配置文件 <code>nginx -s reload</code></p>
</blockquote>
<p>常用配置：Nginx 代理后会丢失很多东西，比如 host.. 也可以使用 nginx 设置每一个请求的唯一 id</p>]]></summary>
    <content type="html"><![CDATA[
<blockquote>
<p><a href="https://www.kuangstudy.com/bbs/1377454518035292162" target="_blank" rel="noopener noreferrer">狂神Nginx学习笔记</a></p>
<p>Nginx 三大作用：1）动静分离  2）反向代理  3）负载均衡</p>
<p>特点：一旦启动永远不需要重启，但是我们需要重新加载配置文件 <code>nginx -s reload</code></p>
</blockquote>
<p>常用配置：Nginx 代理后会丢失很多东西，比如 host.. 也可以使用 nginx 设置每一个请求的唯一 id</p>
<p><strong>nginx server_name 多个的话，空格隔开就行</strong>
恰好nginx -t检查不会报错。 跟其它配置混一起，感觉有时生效，有时不生效，排查了好久。现在看来是nginx把 “a.example.com,”当成匹配规则了。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#主配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">http</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    #添加其他配置，注意分号不要丢</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">   	 include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> /etc/nginx/conf.d/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">.conf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#其它配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">server</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">       80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">  1024zzq.com</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    location</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">   http://101.34.55.204:8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        index</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">  index.html</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> index.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> X-Real-Ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $remote_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> X-Forwarded-For</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $remote_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">		#proxy_set_header X-Request-Id $request_id;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#    access_log /logs/1024.zzq.com.access.log;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>一、反向代理</h2>
<h3>正向代理 vs 反向代理 的概念</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    正向代理：例如翻墙软件，客户端请求到香港的一台服务器，由这台服务器再请求到美国等其它被墙地区的服务器。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    代理客户端的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        客户端 </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> 代理服务器 </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> 目标服务器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    反向代理：例如百度的服务器肯定不止一台，你会先访问到代理服务器再给你决定具体让你到哪一台服务器拿数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    代理服务器端的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    反向代理（</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正向代理：（翻墙）</p>
<figure><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/25/kuangstudy46bdad36-d3e0-43b0-a223-43360b7e8fc7.png" alt="正向代理" tabindex="0" loading="lazy"><figcaption>正向代理</figcaption></figure>
<p>反向代理：（百度）</p>
<figure><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/25/kuangstudy62a15097-6e2a-4dbe-bcf5-f0d7cab81089.png" alt="反向代理" tabindex="0" loading="lazy"><figcaption>反向代理</figcaption></figure>
<h2>二、负载均衡</h2>
<blockquote>
<p>session问题：SpringCache+Redis 保存Cookie解决</p>
</blockquote>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">upstream lb{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    server </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">127.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    server </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">127.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">8081</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">location </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    proxy_pass http</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">//lb;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>三、动静分离</h2>
<blockquote>
<p>有错误不要蒙头瞎搞，瞎百度。先凝练自己的问题。    第一步是查 log 我就是靠这个分析出了错误！</p>
<p>问题：假如项目没用Thymeleaf 用的vue 是不是就不需要nginx处理动静分离了</p>
</blockquote>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>upstream gulimall { </span></span>
<span class="line"><span>	server 127.0.0.1:88;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>include conf.d/*.conf;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>server {</span></span>
<span class="line"><span>    listen       80;</span></span>
<span class="line"><span>    server_name  *.gulimall.com;</span></span>
<span class="line"><span>    location /static {</span></span>
<span class="line"><span>        root html;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    location / { </span></span>
<span class="line"><span>      proxy_set_header Host $host; </span></span>
<span class="line"><span>      proxy_pass http://gulimall;  </span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>四、其它用途</h2>
<p>access.log</p>
<p>看过一篇订阅号，可以通过这个访问日志拿到所有访问者的ip地址  然后写脚本进行限制恶意访问</p>
<h2>五、配置详解</h2>
<h3>5.1.root &amp; alias</h3>
<blockquote>
<p>场景：想搭建本地静态资源Web服务器</p>
<p>在Nginx中，<code>root</code> 和 <code>alias</code> 都是用于定义服务器上的文件路径的指令，但它们之间存在一些区别。</p>
</blockquote>
<p><code>root</code> 指令用于定义一个目录作为请求的根目录。当一个请求到达时，Nginx将在指定的根目录下查找相应的文件。以下是一个示例：</p>
<div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">example.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">/var/www/html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的配置中，当用户访问 <code>example.com</code> 时，Nginx将在 <code>/var/www/html</code> 目录下查找相应的文件并返回给用户。如果用户请求的URI是 <code>/index.html</code>，Nginx将尝试找到并返回 <code>/var/www/html/index.html</code> 文件。</p>
<p><code>alias</code> 指令用于指定一个别名路径，它用于将请求映射到文件系统中的不同位置，而不是直接将请求与根目录进行拼接。以下是一个示例：</p>
<div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">example.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF"> /static/ </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        alias </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">/var/www/static/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的配置中，当用户访问 <code>example.com/static/file.txt</code> 时，Nginx将在 <code>/var/www/static/</code> 目录下查找相应的文件并返回给用户。与 <code>root</code> 不同的是，<code>alias</code> 可以指定一个不同于URI的文件系统路径。（<mark>记得alias最后要带上 /</mark>）</p>
<p>总结一下：</p>
<ul>
<li><code>root</code> 指令指定的路径是与URI拼接的，适用于将请求直接映射到文件系统路径。</li>
<li><code>alias</code> 指令指定了一个别名路径，用于将请求映射到文件系统中的不同位置。</li>
</ul>
<p>实践：特喵的感觉一样的效果</p>
<div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            #root   html;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            #root /Users/xd/Documents/GitRepo/StudyNotes;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            alias </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">/Users/xd/Documents/GitRepo/StudyNotes/;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#不加 / 会访问不到</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            index </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>https://www.cnblogs.com/qingshan-tang/p/12763522.html</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">五.重点</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　重点是理解alias与root的区别，root与alias主要区别在于nginx如何解释location后面的uri，这使两者分别以不同的方式将请求映射到服务器文件上。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　alias（别名）是一个目录别名。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　　　例子：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　　　　　location /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">/abc/ {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">　　　　　　　　root</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit"> /ABC;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　　　　　}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　　　　　当请求http:</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">//qingshan.com/123/abc/logo.png时，会返回 /ABC/123/abc/logo.png文件，即用/ABC 加上 /123/abc。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　root（根目录）是最上层目录的定义。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">例子：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　　　　　location /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">/abc/ {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">　　　　　　　　alias</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit"> /ABC;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　　　　　}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">　　　　　　当请求http:</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">//qingshan.com/123/abc/logo.png时，会返回 /ABC/logo.png文件，即用/ABC替换 /123/abc。</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <published>2024-04-13T08:39:03.000Z</published>
  </entry>
  <entry>
    <title type="text">Network FAQ</title>
    <id>https://doc.zzq8.cn/code/408-Network/%E8%AE%A1%E7%BD%91%E9%97%AE%E9%A2%98%EF%BC%88%E5%BE%85%E8%A7%A3%E5%86%B3%EF%BC%89.html</id>
    <link href="https://doc.zzq8.cn/code/408-Network/%E8%AE%A1%E7%BD%91%E9%97%AE%E9%A2%98%EF%BC%88%E5%BE%85%E8%A7%A3%E5%86%B3%EF%BC%89.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[
<h2>知识汇总</h2>
<p>ICMP</p>
<blockquote>
<p>场景：感觉还是防火墙策略问题，1、检查到DNS服务器208.67.222.222的UDP53端口 2、检查到223.70.221.223和36.112.111.95 icmp、http（tcp80）、https（tcp443）
【icmp】</p>
<p><mark>ping命令使用ICMP协议来发送请求和接收回复</mark></p>
<blockquote>
<p>如果ping不通是证明icmp不可用吗</p>
<p>如果您无法成功ping通目标主机，这并不意味着ICMP协议不可用。虽然ping命令使用ICMP协议来发送请求和接收回复，但有几种可能的原因导致ping不通：</p>
<ol>
<li><strong>目标主机配置或防火墙设置</strong>：目标主机可能配置了防火墙规则，阻止了ICMP请求的回复。这可能是出于安全或网络管理的考虑。在这种情况下，即使ICMP协议可用，您仍然无法通过ping命令与目标主机进行通信。</li>
<li><strong>网络故障或路由问题</strong>：网络中的故障、路由问题或网络拥塞可能导致ping不通。即使ICMP协议正常工作，但如果网络中存在问题，数据包可能无法成功传输到目标主机或返回到源主机。</li>
<li><strong>主机配置问题</strong>：源主机的配置问题也可能导致ping不通。例如，如果源主机的网络配置不正确，它可能无法正确路由ICMP数据包到目标主机。</li>
<li><strong>目标主机禁用ICMP回复</strong>：目标主机可以选择禁用ICMP回复，以增加安全性或减少暴露。即使ICMP协议可用，目标主机也可能不会回复ping请求。</li>
</ol>
<p>因此，无法成功ping通目标主机并不一定意味着ICMP协议不可用。这可能是由于网络配置、防火墙规则、路由问题或目标主机的设置等其他因素引起的。如果您遇到ping不通的问题，建议检查网络配置、目标主机的防火墙设置以及网络基础设施的状态，以确定导致问题的根本原因。</p>
</blockquote>
<p>举例来说，当主机发送一个ICMP回显请求（Ping请求）时，它会将ICMP消息封装在IP数据包中，在网络中传输到目标主机，然后目标主机接收到该请求后，会生成一个ICMP回显回复（Ping回复），同样将其封装在IP数据包中进行传输。</p>
<p>因此，ICMP并不是以IP形式交互数据包的协议，而是在IP网络中使用IP数据包来传输控制消息和错误报告的协议。</p>
<ol>
<li><strong>网络故障诊断</strong>：ICMP用于诊断网络故障。例如，当源主机希望测试与目标主机的连接是否正常时，可以发送一个ICMP回显请求（Ping请求），目标主机接收到请求后会发送回一个ICMP回显回复（Ping回复），从而确认连接的可用性。</li>
</ol>
</blockquote>]]></summary>
    <content type="html"><![CDATA[
<h2>知识汇总</h2>
<p>ICMP</p>
<blockquote>
<p>场景：感觉还是防火墙策略问题，1、检查到DNS服务器208.67.222.222的UDP53端口 2、检查到223.70.221.223和36.112.111.95 icmp、http（tcp80）、https（tcp443）
【icmp】</p>
<p><mark>ping命令使用ICMP协议来发送请求和接收回复</mark></p>
<blockquote>
<p>如果ping不通是证明icmp不可用吗</p>
<p>如果您无法成功ping通目标主机，这并不意味着ICMP协议不可用。虽然ping命令使用ICMP协议来发送请求和接收回复，但有几种可能的原因导致ping不通：</p>
<ol>
<li><strong>目标主机配置或防火墙设置</strong>：目标主机可能配置了防火墙规则，阻止了ICMP请求的回复。这可能是出于安全或网络管理的考虑。在这种情况下，即使ICMP协议可用，您仍然无法通过ping命令与目标主机进行通信。</li>
<li><strong>网络故障或路由问题</strong>：网络中的故障、路由问题或网络拥塞可能导致ping不通。即使ICMP协议正常工作，但如果网络中存在问题，数据包可能无法成功传输到目标主机或返回到源主机。</li>
<li><strong>主机配置问题</strong>：源主机的配置问题也可能导致ping不通。例如，如果源主机的网络配置不正确，它可能无法正确路由ICMP数据包到目标主机。</li>
<li><strong>目标主机禁用ICMP回复</strong>：目标主机可以选择禁用ICMP回复，以增加安全性或减少暴露。即使ICMP协议可用，目标主机也可能不会回复ping请求。</li>
</ol>
<p>因此，无法成功ping通目标主机并不一定意味着ICMP协议不可用。这可能是由于网络配置、防火墙规则、路由问题或目标主机的设置等其他因素引起的。如果您遇到ping不通的问题，建议检查网络配置、目标主机的防火墙设置以及网络基础设施的状态，以确定导致问题的根本原因。</p>
</blockquote>
<p>举例来说，当主机发送一个ICMP回显请求（Ping请求）时，它会将ICMP消息封装在IP数据包中，在网络中传输到目标主机，然后目标主机接收到该请求后，会生成一个ICMP回显回复（Ping回复），同样将其封装在IP数据包中进行传输。</p>
<p>因此，ICMP并不是以IP形式交互数据包的协议，而是在IP网络中使用IP数据包来传输控制消息和错误报告的协议。</p>
<ol>
<li><strong>网络故障诊断</strong>：ICMP用于诊断网络故障。例如，当源主机希望测试与目标主机的连接是否正常时，可以发送一个ICMP回显请求（Ping请求），目标主机接收到请求后会发送回一个ICMP回显回复（Ping回复），从而确认连接的可用性。</li>
</ol>
</blockquote>
<img src="http://images.zzq8.cn/img/image-20231207144031024.png" alt="image-20231207144031024" style="zoom: 67%;">
<h2>未解决清单</h2>
<p>找了很多教程都没解决的计网问题：</p>
<blockquote>
<p>场景：在学校用学校 DNS 可进官网，用其他的就进不了</p>
<p>所有接入校园网的用户都必须使用学校自己的DNS，使用其他地址如218.2.135.1,114.114.114.114,8.8.8.8的DNS服务解析的，在校园网内将无法访问学校主页。好奇怎么实现？</p>
</blockquote>
<p>也就是说要判断：在同一个局域网 + 用的学校的 DNS 服务器</p>
<p>好奇怎么判断DNS服务器是不是学校的，细化来说 JAVA能做到获取访问我这台服务器的用户使用的是哪一个 DNS服务器吗</p>
<blockquote>
<p>公司上班时间段不准员工访问特定的网页   怎么实现的？
实测可搭梯子开全局访问（开不开全局取决于，机场的 Rule 策略），午休和下班后也可访问</p>
</blockquote>
<blockquote>
<p>ping计算机名得到局域网ip</p>
</blockquote>
<figure><img src="https://images.zzq8.cn/img/202206011815121.png" alt="ping计算机名得到局域网ip" tabindex="0" loading="lazy"><figcaption>ping计算机名得到局域网ip</figcaption></figure>
<blockquote>
<p>ping主机名得到的不是本机局域网ip</p>
</blockquote>
<figure><img src="https://images.zzq8.cn/img/202207211220027.png" alt="image-20220721122030582" tabindex="0" loading="lazy"><figcaption>image-20220721122030582</figcaption></figure>
<p>才区分到一个概念，计算机名称和用户名称不冲突</p>
<p>具体看 AIDA64：</p>
<p>类型	类别	计算机名称
DNS 主机名称	逻辑	zzqhandsome</p>
<h2>已解决清单</h2>
<blockquote>
<p>Q：机房网络显示，无网络访问权限</p>
<p>A：是因为那个 IP 地址被占用了</p>
</blockquote>
<blockquote>
<p>Chrome浏览器访问不了学校官网，Edge 可以。（解决）</p>
</blockquote>
<p>原因是我在Chrome 设置中设置了一个 使用安全 DNS 。我是用的第三方DoH服务器  DNS over Https（DoH），具体书签搜记录。</p>
<blockquote>
<p>Q：想要 Windows To Go 但 BIOS 设了密码</p>
<p>A：输错 5 次，会有一个提示码，更具提示码到一个网站逆向出密码</p>
</blockquote>
<blockquote>
<p><a href="http://www.webkaka.com/tutorial/zhanzhang/2017/061570/" target="_blank" rel="noopener noreferrer">CMD ping 命令参数</a></p>
</blockquote>
<img src="https://images.zzq8.cn/img/202211101458062.png" alt="image-20221110145840721" style="zoom:50%;">
<p>字节代表数据包的大小，时间顾名思义就是返回时间，“TTL”的意思就是数据包的生存时间，当然你得到的这个就是剩余的生存时间。</p>
<p>TTL用来计算数据包在路由器的消耗时间，因为现在绝大多数路由器的消耗时间都小于1s，而时间小于1s就当1s计算，<strong>所以数据包没经过一个路由器节点TTL都减一</strong>。</p>
<p>那么TTL的值一开始是什么呢？不同的操作系统默认下TTL是不同的。默认情况下，Linux系统的TTL值为64或255，Windows NT/2000/XP系统的TTL值为128，Windows 98系统的TTL值为32，UNIX主机的TTL值为255。</p>
<p>上图看到Ping百度服务器返回的数据包的TTL值为56（<strong>一般都是找2^n且离返回值最近的那个值</strong>），那么途中则经过了64-56=9个路由器。</p>
<p>总结：通过上述例子的分析，说“TTL”的值越小越好显然是不对的，相反，应该说是“TTL”的值越大越好才对，因为“TTL”的值越大，说明发送数据包经过路由器越少，而经过路由器越少，说明越快到达目的地，速度当然也就越快。</p>
<h2>场景解决知识点</h2>
<p>访问 GitHub 进不去</p>
<blockquote>
<p>CDN 内容分发网络 (Content delivery network)      静态内容的分发</p>
</blockquote>
<p>CDN遭到dns污染</p>
<p>当CDN（内容分发网络）遭到DNS（域名系统）污染时，它可能会对网络性能和用户体验产生负面影响。DNS污染是一种恶意行为，旨在篡改或劫持DNS解析过程，将用户发送到错误的IP地址或恶意网站上。</p>
<p>用户请求一个网站是先到CDN服务器吗</p>
<p>CDN（内容分发网络）是一种分布式架构，旨在提供高效的内容交付和加速用户访问网站的体验。CDN服务器位于全球各个地理位置，并存储了网站的静态资源，如图片、脚本文件和样式表等。</p>
<p>所以如果我请求github.com可能请求的不是真是的github服务器而是CDN服务器</p>
<p>是的，当你请求像github.com这样的网站时，你的请求可能会被导向CDN服务器而不是直接到达真正的GitHub服务器。
当你在浏览器中输入github.com的URL或点击链接时，你的请求会先经过DNS解析，将域名转换为对应的IP地址。然后，你的请求会被发送到最近的CDN节点，该节点会根据你的地理位置和网络条件，选择一个最优的CDN服务器来响应你的请求。</p>
<p>那我一些登录的后台逻辑，会请求到真实的github服务器吗</p>
<p>对于登录后台逻辑等需要与GitHub进行交互的操作，你的请求会直接发送到真实的GitHub服务器，而不是经过CDN服务器。</p>
<h2>Other</h2>
<p><strong>租房</strong></p>
<p>场景: 路由器有wifi可以连，但是连上没有网络。</p>
<p>设备: 每层楼都有路由器，二楼有个弱电箱(光猫，交换机)</p>
<p>要等光猫上网的灯亮了，才有网</p>
<p>问题: 过一段时间自动没网，需要重启电源(两个)。</p>
<p>我怀疑是交换机的问题因为我试着重启了光猫不行</p>
<p>预测光猫只能那么多人连超过就坏数据包堆积</p>
<p>后面限制20人就好多了</p>
<p>#网络</p>
]]></content>
    <published>2024-04-13T08:39:03.000Z</published>
  </entry>
  <entry>
    <title type="text">MacOS</title>
    <id>https://doc.zzq8.cn/code/408-PC/MacOS.html</id>
    <link href="https://doc.zzq8.cn/code/408-PC/MacOS.html"/>
    <updated>2024-06-05T16:30:15.000Z</updated>
    <summary type="html"><![CDATA[
<blockquote>
<p>由于第一次接触MacOS，花了三周的星期六（三天）来搭这台MacOS</p>
</blockquote>
<h2>Software</h2>
<blockquote>
<p>Apr. 12th 2024</p>
</blockquote>
<ul>
<li>Karabiner (win autohotkey)</li>
<li>Alfred (Lib &amp; Everything)
<ul>
<li>in 关键词（可以搜文件里面的内容！）</li>
</ul>
</li>
<li>Stats</li>
<li>Clash</li>
<li>Easydict</li>
<li>IINA</li>
<li>Omi</li>
<li>Lunar（两台电脑连一台显示器软件方式切信号源通过 CLI）</li>
<li>iShot</li>
<li>腾讯会议</li>
<li>Dash</li>
<li>Espanso</li>
<li>Chrome</li>
<li>iTerm</li>
<li>Karabiner</li>
<li>Office</li>
<li>Parallels</li>
<li>QuickShade</li>
<li>Paste</li>
<li>SoundSource</li>
<li>Sublime</li>
<li>Lemon</li>
<li>Thor</li>
<li>Tiles + WGestures</li>
<li>Postman Navicat IDEA PS Sourcetree TinyRDM</li>
</ul>]]></summary>
    <content type="html"><![CDATA[
<blockquote>
<p>由于第一次接触MacOS，花了三周的星期六（三天）来搭这台MacOS</p>
</blockquote>
<h2>Software</h2>
<blockquote>
<p>Apr. 12th 2024</p>
</blockquote>
<ul>
<li>Karabiner (win autohotkey)</li>
<li>Alfred (Lib &amp; Everything)
<ul>
<li>in 关键词（可以搜文件里面的内容！）</li>
</ul>
</li>
<li>Stats</li>
<li>Clash</li>
<li>Easydict</li>
<li>IINA</li>
<li>Omi</li>
<li>Lunar（两台电脑连一台显示器软件方式切信号源通过 CLI）</li>
<li>iShot</li>
<li>腾讯会议</li>
<li>Dash</li>
<li>Espanso</li>
<li>Chrome</li>
<li>iTerm</li>
<li>Karabiner</li>
<li>Office</li>
<li>Parallels</li>
<li>QuickShade</li>
<li>Paste</li>
<li>SoundSource</li>
<li>Sublime</li>
<li>Lemon</li>
<li>Thor</li>
<li>Tiles + WGestures</li>
<li>Postman Navicat IDEA PS Sourcetree TinyRDM</li>
</ul>
<p>补充：</p>
<ul>
<li>
<p>Typora</p>
<ul>
<li>注意：在官网这里<a href="https://support.typora.io/Shortcut-Keys/#change-shortcut-keys" target="_blank" rel="noopener noreferrer">键位映射表</a> 搜名字，要对应起来，Mac 设置到 App 快捷键</li>
</ul>
<img src="http://images.zzq8.cn/img/image-20231215180744304.png" alt="image-20231215180744304" style="zoom: 25%;">
</li>
<li>
<p>SourceTree</p>
<ul>
<li>
<p>Q：M 系列芯片好多软件还不支持，TortoiseSVN、SQLServer这种。。头疼了很久
后补充：</p>
<ul>
<li>其实用 Shell 挺好用的</li>
<li>而且其实 idea 自带的就很好</li>
<li>后又发现 SourceTree 很好用，管理自己的 Git 蛮好</li>
</ul>
<p>XD: 240330, 发现一个不错的软件 看的从 0 到 Thor 图发现的，  SourceTree
<strong>注意 - sourceTree push 的时候如无法 auth 明明密码账号正确！解决 - 设置换 git 内核用 mac 本地的！！！</strong></p>
</li>
</ul>
</li>
</ul>
<h2>ShortKey</h2>
<ul>
<li>cmd+opt+drag = ln - i 创建文件的快捷方式</li>
<li>cmd+shift+h 用户目录</li>
<li>command＋shift＋G 访达跳转路径，同 win 上面那个里</li>
<li>cmd+shift+. 显示隐藏文件</li>
<li>cmd+ctrl+f 全屏</li>
<li>cmd+opt+v 剪切</li>
<li>⭐️ Command-I	显示简介
<ul>
<li>我推测 "I" 可能代表 "Info"，因为 "Info" 是「信息」的简写。因此，Command-I 可以被理解为「显示简介」或「显示信息」</li>
</ul>
</li>
<li>Shift+【 可以输出 「</li>
</ul>
<h2>Tips</h2>
<ul>
<li>
<p>⭐️ <strong>增加系统快捷键</strong> - 键盘设置里 - App快捷键 - 表情与符号（xd 这个菜单名一定要填对，其实看一下每个应用的task bar应该都能设置！！！）</p>
</li>
<li>
<p>MAC click dock APP icon 会切桌面同应用不同 window</p>
</li>
<li>
<p>😭 TODO 软链？
ln -s 表示软链，    XD：删掉本来目录的 base.yml ，把自己目录做好的 base.yml 软链到本来目录！</p>
</li>
<li>
<p>对某段文字 Click Double 会自动选取系统认为的词组      Click Three Times 就会 check 这一整行</p>
</li>
<li>
<p>不显示隐藏文件
<code>command+shift+.</code> 可以临时切换显示隐藏文件。</p>
<p>使用以下方法永久设置（似乎对浏览器出发的文件选择器未生效）</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">defaults</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> write</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> com.apple.finder</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> AppleShowAllFiles</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -bool</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> # 显示隐藏文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">defaults</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> write</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> com.apple.finder</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> AppleShowAllFiles</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -bool</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> # 不显示隐藏文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">killall</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> Finder</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> # 重启 Finder</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>shell windows scroll     我的替代方案：用CMD+上下滚动，不用鼠标滚轮</p>
</li>
<li>
<p>开了2个chrome窗口 macos如何快捷键切换 (cmd+`)   【现在用的很频繁】</p>
</li>
</ul>
<blockquote>
<p>macmini连接一台4k分辨率显示器，在设置中设置显示器的缩放分辨率只会影响UI字体并不会影响真实的4k分辨率是吗</p>
</blockquote>
<p>是的，当您连接一台4K分辨率的显示器到Mac mini上时，您可以在系统设置中调整显示器的缩放分辨率。这将影响显示器上的UI元素（如菜单栏、窗口和图标）的大小和清晰度，但不会实际改变显示器的物理分辨率。</p>
<p>Mac mini会输出其默认的分辨率（通常是显示器的原生分辨率），而您在系统设置中进行的缩放只会调整UI元素的大小，以适应更高或更低的分辨率。这意味着物理像素的数量不会改变，只是它们在屏幕上的显示大小会发生变化。</p>
<p>如果您想要实际更改显示器的分辨率，您可以在系统设置中选择显示器的原生分辨率或其他支持的分辨率选项。这将直接影响物理像素的数量，以获得更高的清晰度和细节。注意，更高的分辨率可能需要更强大的图形处理能力，并可能导致图形性能下降。</p>
<p>昨天去了王府井apm苹果店，和工作人员交流了一下，这个不是降分辨率，就是和win10一样只是调大了系统的字体（但是也不是完全一样，win10只是调节了字体，而macos是调节了字体，icon和窗口的大小）。在调节后的屏幕上会显示一个更低的分辨率，那个的意思是说现在的字体大小和更低分辨率的缺省字体一样的，正是这个不好的ui或者说系统提醒的这句话让大家有了误解。建议苹果可以在新版本中修改这句让人误解的话。</p>
<p>作者：Peterwen
链接：https://www.zhihu.com/question/443961913/answer/1726069699
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<blockquote>
<p>Q：MySQL 服务自启动</p>
</blockquote>
<p><code>sudo vim /Library/LaunchDaemons/com.mysql.startup.plist</code> 【没成功，不知道是否该转战brew】</p>
<ul>
<li>启动时间：LaunchAgents 目录中的 Launch Agents 是在用户登录时自动启动的，而 LaunchDaemons 目录中的 Launch Daemons 是在系统启动时自动启动的，不依赖于用户登录。</li>
<li>运行权限：LaunchAgents 目录中的 Launch Agents 是以当前登录用户的身份运行的，仅对该用户有效。而 LaunchDaemons 目录中的 Launch Daemons 是以系统的管理员权限（root 用户）运行的，并对所有用户有效。【所以在 LaunchDaemons 权限必须是 Root 否则无法启动！！！<code>chown root:wheel jetbrains.vmoptions.plist</code>】</li>
<li><mark>这个文件目录类似 Windows 的startup</mark></li>
<li>目的：从官方网站下载的 MySQL 版本，并希望将其设置为 macOS 的自启动服务</li>
<li>像MySQL这种服务得放LaunchDaemons里，像激活idea这种得放 LaunchAgents 里。。。注意权限是否够（然后我说得 lemon 软件看是否启动！！！设置里看不到）</li>
</ul>
<blockquote>
<p>为什么Vue项目总是在1024端口启动？</p>
</blockquote>
<p>我猜你是Mac 用户～</p>
<p>在mac os中，非root用户是无法使用小于1024的常用端口的。
如果小于1024端口，会从1024开始。</p>
<ul>
<li></li>
</ul>
<h2>Mac Knowledge</h2>
<ul>
<li>
<p>续航：公司 MacAir M2 五一假期拔掉充电线   盒盖待机放假回来看还有 50%+ 的电量</p>
</li>
<li>
<p>关闭 SIP</p>
<ul>
<li>针对 M 系列芯片，长按开机键进入到恢复模式，Terminal <code>csrutil disable</code></li>
</ul>
</li>
<li>
<p>好像网上下的 app 打不开的话可以执行一个命令就可以打开了</p>
<p>您提供的命令 <code>sudo xattr -d com.apple.quarantine /Applications/Tiny\ RDM.app</code> 用于删除 <code>/Applications/Tiny RDM.app</code> 应用程序的扩展属性中的 com.apple.quarantine 标记。这个标记通常由 macOS 用于标识从互联网或其他不可信来源下载的应用程序，以便在首次运行时显示安全警告。</p>
<p>通过运行该命令，您可以移除 Tiny RDM 应用程序的下载标记，以便在下次运行时不再显示安全警告。请确保您已经正确指定应用程序的路径，并在终端中以管理员权限（sudo）运行该命令。</p>
<p>请注意，在执行此命令之前，您应该确认已经从可信的来源下载了 Tiny RDM 应用程序，并且信任该应用程序。如果您不确定应用程序的来源或是否应该删除下载标记，请谨慎操作或咨询相关的安全建议。</p>
</li>
</ul>
<h2>Other</h2>
<h4>SQLServer</h4>
<blockquote>
<p>使用Docker 运行 mcr.microsoft.com/azure-sql-edge 来使用</p>
</blockquote>
<p>Docker: 必须复杂密码</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "ACCEPT_EULA=1"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "MSSQL_SA_PASSWORD=Aa59964360"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "MSSQL_PID=Developer"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "MSSQL_USER=SA"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 1433:1433</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">/Users/xd/Documents/SoftwareConfiguration/Docker/SQL:/SQL</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> SQLServer</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> mcr.microsoft.com/azure-sql-edge</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>SQLServer: 可以先运行第一行确定好路径 /var/opt/mssql/data/ 及其 scm7 名字</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">RESTORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> [ZS_SCM]</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> DISK</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/home/ZC_SCM0426002.BAK'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> WITH</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> MOVE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'scm7'</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '/var/opt/mssql/data/ZS_SCM.mdf'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">MOVE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'scm7_log'</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '/var/opt/mssql/data/ZS_SCM_log.ldf'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><hr>
<h1></h1>
<h1></h1>
]]></content>
    <published>2024-04-13T08:39:03.000Z</published>
  </entry>
</feed>