<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.DepartmentMapper">

	<!--注意：因为字段名有dept_name，所以用select * 这样这个字段就封装不上-->
	<select id="getDeptById" resultType="department">
		select id,dept_name departmentName from tbl_dept where id=#{id}
	</select>


	<!--嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则  -->
	<resultMap id="_getDeptByIdPlus" type="department">
		<id column="did" property="id"/>
		<result column="dept_name" property="departmentName"/>
		<!--
			collection定义关联集合类型的属性的封装规则
			ofType:指定集合里面元素的类型
  		-->
		<collection property="emps" ofType="employee">
			<id column="eid" property="id"/>
			<id column="eid" property="id"/>
			<result column="last_name" property="lastName"/>
			<result column="email" property="email"/>
			<result column="gender" property="gender"/>
		</collection>
	</resultMap>
	<select id="getDeptByIdPlus" resultMap="_getDeptByIdPlus">
		SELECT d.id did,d.dept_name dept_name,
			   e.id eid,e.last_name last_name,e.email email,e.gender gender
		FROM tbl_dept d LEFT JOIN tbl_employee e ON d.id=e.d_id
		WHERE d.id=#{id}
	</select>




	<!-- collection：分段查询 -->
	<resultMap id="MyDeptStep" type="department">
		<id column="id" property="id"/>
		<id column="dept_name" property="departmentName"/>
		<collection property="emps"
					select="org.example.mapper.EmployeeMapperPlus.getEmpsByDeptId"
					column="{deptId=id}" fetchType="lazy"></collection>
	</resultMap>
	<!-- public Department getDeptByIdStep(Integer id); -->
	<select id="getDeptByIdStep" resultMap="MyDeptStep">
		select id,dept_name from tbl_dept where id=#{id}
	</select>
</mapper>