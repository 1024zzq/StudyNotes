"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[3524],{2798:(e,n,i)=>{i.d(n,{l:()=>t});const t={category:{"/":{path:"/category/",map:{使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[0]},工具:{path:"/category/%E5%B7%A5%E5%85%B7/",indexes:[1]}}}},tag:{"/":{path:"/tag/",map:{页面配置:{path:"/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",indexes:[0,1]},使用指南:{path:"/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[0,1]}}}}}},8589:(e,n,i)=>{i.d(n,{M:()=>t});const t=["/posts/2024-03-01-blog_example.html","/posts/2024-03-02-blog_example2.html","/code/ZOther/FrontEnd.html","/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/VuePress.html","/code/TODO.html","/code/408-PC/Windows_Software.html","/code/StudyList.html","/code/408-DSA/%E5%BF%AB%E6%8E%92%EF%BC%88%E5%88%86%E6%B2%BB%E6%80%9D%E6%83%B3%EF%BC%89.html","/code/408-Network/HttpRequest.html","/code/408-Network/JWT.html","/code/408-Network/Nginx.html","/code/408-Network/%E8%AE%A1%E7%BD%91%E9%97%AE%E9%A2%98%EF%BC%88%E5%BE%85%E8%A7%A3%E5%86%B3%EF%BC%89.html","/code/408-PC/MacOS.html","/code/408-PC/WTG%20(WindowsToGo).html","/code/408-PC/%E8%AE%A1%E7%BB%84%E5%8E%9F.html","/code/DistributedLock/DistributedLock.html","/code/GuliMall/Advanced.html","/code/GuliMall/Basic.html","/code/GuliMall/ElasticSearch.html","/code/JUC/JUC.html","/code/JVM/JVM.html","/code/JavaFramework/MyBatis.html","/code/JavaFramework/SpringBoot.html","/code/JavaFramework/SpringCloud.html","/code/JavaFramework/SpringIntegration.html","/code/JavaFramework/SpringSecurity.html","/code/JavaSE/Interview-Java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E7%B2%BE%E8%AE%B2.html","/code/JavaSE/Interview-%E5%B0%9A%E7%A1%85%E8%B0%B7%E7%BB%8F%E5%85%B8Java%E9%9D%A2%E8%AF%95%E9%A2%98%E7%AC%AC%E4%B8%80%E5%AD%A3.html","/code/JavaSE/JavaSE.html","/code/JavaSE/Lambda.html","/code/JavaSE/Planet-JavaGuide.html","/code/JavaSE/Steam.html","/code/Linux/LinuxDevEnv.html","/code/Linux/LinuxRef.html","/code/MQ/RabbitMQ.html","/code/NoSQL/Redis.html","/code/NoSQL/RedisAdvanced.html","/code/RuoYi/RuoYi.html","/code/SQL/MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2.html","/code/SQL/Mysql%E7%B4%A2%E5%BC%95_%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93.html","/code/ZOther/Git_SVN.html","/code/ZOther/GitHubActions.html","/code/ZOther/Maven.html","/code/ZOther/Regexr.html","/code/upupor/Books.html","/code/upupor/FirstYear.html","/code/upupor/upupor.html","/code/408-PC/Software/Clash.html","/code/408-PC/Software/IdeaShortcutKey.html","/code/ZOther/Abandon_Project/%E5%B0%9A%E4%B8%8A%E4%BC%98%E9%80%89_Abandon.html","/code/ZOther/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3%E5%8F%AF%E4%BB%A5%E6%94%BB%E7%8E%89/2020%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%89%BE%E5%B7%A5%E4%BD%9C%E6%8C%87%E5%8D%97.html","/code/ZOther/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3%E5%8F%AF%E4%BB%A5%E6%94%BB%E7%8E%89/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BB%A5%20Java%20%E4%B8%BA%E4%BE%8B%EF%BC%89.html","/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/5am-Project.html","/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/Chrome%E4%B9%A6%E7%AD%BE%E8%A2%AB%E5%8A%AB%E6%8C%81.html","/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/Kali%20%E7%A0%B4%E8%A7%A3%20WIFI.html","/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/ShareList%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98.html","/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/%E5%A4%A9%E5%A4%A9%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84%E8%BD%AF%E7%A1%AC%E4%BB%B6.html","/code/ZOther/Abandon_Project/SpringGeekbang/Spring.html"]},594:(e,n,i)=>{i.d(n,{U:()=>t});const t={article:{"/":{path:"/article/",indexes:[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,1]}},star:{"/":{path:"/star/",indexes:[0]}},timeline:{"/":{path:"/timeline/",indexes:[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,1,0]}}}},2014:(e,n,i)=>{i.d(n,{B:()=>P});var t={};i.r(t);var a={};i.r(a),i.d(a,{default:()=>g});var s={};i.r(s),i.d(s,{default:()=>w});var l={};i.r(l),i.d(l,{default:()=>_});var o={};i.r(o),i.d(o,{default:()=>I});var r=i(9862),p=i(4326),d=i(5860),h=i(4788),c=i(8021),m=i(8493),k=i(5910);const g=(0,r.re)({enhance:({app:e})=>{(0,p.L4)("FontIcon")||e.component("FontIcon",h.A),(0,p.L4)("Badge")||e.component("Badge",c.A),(0,p.L4)("BiliBili")||e.component("BiliBili",m.A),(0,p.L4)("VidStack")||e.component("VidStack",k.A)},setup:()=>{(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]});var u=i(5431),b=i(1110),E=i(919),B=i(943),A=i(2773),f=i(7041),y=i(7397),v=i(7406);const w=(0,r.re)({enhance:({app:e})=>{},setup:()=>{(0,v.p)()}});var C=i(6142),S=i(8453),F=i(7668),x=i(4495),q=i(2360),D=i(8323),L=i(7971);(0,x.M_)((e=>{const n=e.t,i=!1!==e.I,t=e.i;return i?{title:n,content:t?()=>[(0,q.h)(F.GB,{icon:t}),n]:null,order:e.O,index:e.I}:null}));const _=(0,r.re)({enhance:({app:e,router:n})=>{const{scrollBehavior:i}=n.options;n.options.scrollBehavior=async(...e)=>(await F.lE.wait(),i(...e)),(0,F.fk)(e),e.component("HopeIcon",F.GB),e.component("BloggerInfo",D.tI),e.component("SocialMedias",D.rS),e.component("GlobalEncrypt",L.J),e.component("LocalEncrypt",L.n)},setup:()=>{(0,F.PV)(),(0,F.i$)(),(0,D.su)()},layouts:{Layout:F.PE,NotFound:F.Mk,BlogCategory:D.Pn,BlogHome:D.qX,BlogType:D.z7,Timeline:D.Kf}}),M=(0,q.pM)({name:"SocialLink",setup:()=>()=>(0,q.h)("div",{class:"vp-nav-item vp-action"},(0,q.h)("a",{class:"vp-action-link",href:"https://discord.gg/PZTQfJ4GjX",target:"_blank",rel:"noopener noreferrer","aria-label":"discord",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640" style="width:1.25rem;height:1.25rem;vertical-align:middle"><path d=\'m534.42,126.58a1.57,1.57 0 0 0 -0.79,-0.73a507.33,507.33 0 0 0 -125.19,-38.81a1.9,1.9 0 0 0 -2.01,0.95a352.96,352.96 0 0 0 -15.58,32.01a468.41,468.41 0 0 0 -140.6,0a323.75,323.75 0 0 0 -15.82,-32.01a1.98,1.98 0 0 0 -2.02,-0.95a505.9,505.9 0 0 0 -125.19,38.81a1.79,1.79 0 0 0 -0.82,0.7c-79.73,119.07 -101.57,235.21 -90.86,349.9a2.11,2.11 0 0 0 0.81,1.44a510.06,510.06 0 0 0 153.56,77.6a1.99,1.99 0 0 0 2.15,-0.71a364.19,364.19 0 0 0 31.42,-51.08a1.95,1.95 0 0 0 -1.07,-2.71a335.92,335.92 0 0 1 -47.98,-22.85a1.98,1.98 0 0 1 -0.19,-3.27c3.22,-2.42 6.44,-4.93 9.53,-7.46a1.9,1.9 0 0 1 1.99,-0.27c100.65,45.94 209.61,45.94 309.07,0a1.89,1.89 0 0 1 2.01,0.24c3.09,2.54 6.31,5.07 9.55,7.49a1.97,1.97 0 0 1 -0.17,3.27a315.25,315.25 0 0 1 -48,22.83a1.97,1.97 0 0 0 -1.05,2.73a409.02,409.02 0 0 0 31.4,51.05a1.95,1.95 0 0 0 2.15,0.73a508.37,508.37 0 0 0 153.81,-77.59a1.97,1.97 0 0 0 0.81,-1.41c12.82,-132.61 -21.48,-247.79 -90.93,-349.9zm-315.91,280.03c-30.3,0 -55.27,-27.81 -55.27,-61.96s24.48,-61.96 55.27,-61.96c31.03,0 55.76,28.05 55.27,61.96c0,34.15 -24.48,61.96 -55.27,61.96zm204.35,0c-30.3,0 -55.27,-27.81 -55.27,-61.96s24.48,-61.96 55.27,-61.96c31.03,0 55.76,28.05 55.27,61.96c0,34.15 -24.23,61.96 -55.27,61.96z\' fill="currentColor"/></svg>'}))}),I=(0,r.re)({enhance:({app:e})=>{e.component("SocialLink",M)}}),P=[t,a,u,b,E,B,A,f,y,s,C,S,l,o].map((e=>e.default)).filter(Boolean)},6159:(e,n,i)=>{i.d(n,{J:()=>a,c:()=>t});const t=JSON.parse('{"/_posts/2024-03-01-blog_example.html":"/posts/2024-03-01-blog_example.html","/_posts/2024-03-02-blog_example2.html":"/posts/2024-03-02-blog_example2.html","/code/408-PC/Windows&Software.html":"/code/408-PC/Windows_Software.html","/code/SQL/Mysql%E7%B4%A2%E5%BC%95&%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93.html":"/code/SQL/Mysql%E7%B4%A2%E5%BC%95_%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93.html","/code/ZOther/Git&SVN.html":"/code/ZOther/Git_SVN.html"}'),a=Object.fromEntries([["/",{loader:()=>i.e(4470).then(i.bind(i,6731)),meta:{t:"LearnData 开源笔记",i:"fa-solid fa-book-open-reader"}}],["/blog.html",{loader:()=>i.e(6632).then(i.bind(i,5005)),meta:{t:"互联网小白",i:"fa-solid fa-house-crack"}}],["/intro.html",{loader:()=>i.e(3912).then(i.bind(i,2304)),meta:{t:"个人介绍",i:"fa-solid fa-circle-nodes"}}],["/posts/2024-03-01-blog_example.html",{loader:()=>i.e(6518).then(i.bind(i,3515)),meta:{d:17092512e5,l:"2024年3月1日",c:["使用指南"],g:["页面配置","使用指南"],u:!0,e:"<p>博客文章内容，支持 Markdown 和 HTML 语言。</p>\n",r:{minutes:.64,words:192},t:"博客文章样例",O:-1,y:"a"}}],["/posts/2024-03-02-blog_example2.html",{loader:()=>i.e(6467).then(i.bind(i,1634)),meta:{d:17093376e5,l:"2024年3月2日",c:["工具"],g:["页面配置","使用指南"],e:"<p>博客文章内容，支持 Markdown 和 HTML 语言。</p>\n",r:{minutes:.13,words:39},t:"博客文章样例2",O:-1,y:"a"}}],["/code/StudyList.html",{loader:()=>i.e(3847).then(i.bind(i,9566)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>知行合一 ！！！慢慢来比较快！自己写点属于自己的 MD 笔记。</p>\n<p>具体学习路线看 鱼皮的 Java 学习路线导图， 主次关系需要分清楚！\n<code>我更希望自己是在不断向上爬山，而不是重复劳动、绕山而行。</code>虽然后者更轻松，但我看不到山顶的风光，也没有成就感，曾经的热爱就慢慢消失了。</p>\n<p>解释：✔ 代表现在正在做！加油！！！及时制定近期目标，避免无头苍蝇！不要麻木！！！</p>\n<p><mark>可执行的阶段性目标计划+严格的执行</mark></p>\n<hr>\n<p>学习的重点之一是习惯的养成，很多在职程序员没有写博客、做总结的习惯，导致他们工作两三年后水平停滞不前，最终工资被倒挂，甚至无力跳槽，这其中有一个重要的原因就是他们在入门的时候没有养成良好的学习习惯，比如看书必须记笔记，有了感悟最好写博客记录一下，发现知识盲区一定要去搜索权威文档而不是听信二手知识等等。</p>\n</blockquote>",r:{minutes:4.77,words:1430},t:"Study List",y:"a"}}],["/code/TODO.html",{loader:()=>i.e(8992).then(i.bind(i,9719)),meta:{d:1715785276e3,e:"<p>https://newzone.top/</p>\n<p>既有 docify（有目录！！！）    又搞的 vuepress 是我喜欢的样子！！！</p>\n<p>https://theme-hope.vuejs.press/zh/demo/projects.html</p>\n<p>全部值得一过，有很多优秀的个人</p>\n<ul>\n<li>mac CLI git 如何更灵活的像 GUI</li>\n</ul>\n",r:{minutes:.16,words:47},t:"",y:"a"}}],["/code/408-DSA/%E5%BF%AB%E6%8E%92%EF%BC%88%E5%88%86%E6%B2%BB%E6%80%9D%E6%83%B3%EF%BC%89.html",{loader:()=>i.e(5337).then(i.bind(i,5340)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>前言：二分<code>查找</code>  查找需要基于排序好的集合。排序算法是排序，查找是查找   勿混淆！</p>\n<p>https://www.acwing.com/solution/content/16777/</p>\n<p><a href="https://www.acwing.com/blog/content/31431/" target="_blank" rel="noopener noreferrer">【Java版本】常用代码模板1——基础算法 + 模板题参考实现</a></p>\n</blockquote>\n<p>快速排序（Quicksort）是对冒泡排序的一种改进，借用了分治的思想</p>',r:{minutes:2.68,words:803},t:"快排（分治思想）",y:"a"}}],["/code/408-Network/HttpRequest.html",{loader:()=>i.e(8407).then(i.bind(i,1237)),meta:{d:1712997543e3,e:'\n<p><a href="https://blog.csdn.net/f110300641/article/details/115342356" target="_blank" rel="noopener noreferrer">http 请求包含哪几个部分（请求行、请求头、请求体）</a></p>\n<blockquote>\n<p>这里放一些常见的，具体的去搜</p>\n</blockquote>\n<h2>一、General（请求行）</h2>\n<ul>\n<li>\n<p>Request URL: http://127.0.0.1:8848/nacos/</p>\n</li>\n<li>\n<p>Request Method: GET</p>\n</li>\n<li>\n<p>Status Code:304（响应状态码）</p>\n</li>\n<li>\n<p>Remote Address: 127.0.0.1:8848（HTTP请求的源地址）</p>\n<ul>\n<li>\n<p>HTTP协议在三次握手时使用的就是这个Remote Address地址，在发送响应报文时也是使用这个Remote Address地址。因此，如果请求者伪造Remote Address地址，他将无法收到HTTP的响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。</p>\n</li>\n<li>\n<p>如果http请求经过代理服务器转发，用户的真实ip会丢失，为了避免这个情况，代理服务器通常会增加一个叫做x_forwarded_for的头信息，把连接它的客户端IP（即你的上网机器IP）加到这个头信息里，这样就能保证网站的web服务器能获取到真实IP</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Referrer Policy: strict-origin-when-cross-origin（引用策略，有八种）</p>\n<ul>\n<li>Referer提供访问来源的信息，告诉服务器，用户在访问当前资源之前的位置，发生传场景包含：加载图片、样式文件、JS文件、请求。浏览器会将当前网址作为Referer字段，放在 HTTP 请求的头信息发送。</li>\n</ul>\n</li>\n</ul>',r:{minutes:12.86,words:3857},t:"HttpRequest",y:"a"}}],["/code/408-Network/JWT.html",{loader:()=>i.e(6131).then(i.bind(i,1181)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>Token 续期问题面试杭州问过 长沙那个也问过！！！        个人认为是频繁点</p>\n</blockquote>\n<h2>项目实现</h2>\n<h3>RuoYi</h3>\n<p>感觉跟直接用最简单方式 UUID 存 Redis 一样的做法！！！</p>\n<p>我感觉这里 JWT 都有点多余，顶多是看上去更安全？？？？（我感觉是单体项目其实完全可 Session 解决，这里用 Token 避免分布式共享?其实UUID也行？）</p>\n<p>感觉RuoYi是只用Redis ttl实现的， Token的作用像是只充当了个UUID和Redis关联</p>\n<blockquote>\n<p>个人总结：</p>\n<ul>\n<li>axios配置请求、响应拦截器</li>\n<li>前端 Session 存JWT解析数据为 UUID，   后端 Redis 对应这个 UUID 有 User 数据</li>\n<li>靠 Redis 驱动，Redis 一过期就返回 401，前端响应拦截器就删 Session 重定向到 login.html</li>\n</ul>\n<h4># 前端存 Session 不过期</h4>\n<p>解密后的数据只有 <strong>HEADER</strong>  "alg": "HS512"  &amp;  <strong>PAYLOAD</strong>  "login_user_key": "a667e3f6-5af2-4799-83d6-5c871507df08"</p>\n<h4># 后端存 Redis 通过login_user_key对应，存用户信息 LoginUser.class</h4>\n<p>后端如果redis过期，则返回状态 401</p>\n<p>核心方法：<code>com.ruoyi.framework.web.service.TokenService#getLoginUser</code></p>\n<p><code>com.ruoyi.framework.web.service.TokenService#verifyToken</code> 验证令牌有效期，相差不足20分钟，自动刷新Redis缓存</p>\n</blockquote>',r:{minutes:6.1,words:1829},t:"JWT",y:"a"}}],["/code/408-Network/Nginx.html",{loader:()=>i.e(2534).then(i.bind(i,8282)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p><a href="https://www.kuangstudy.com/bbs/1377454518035292162" target="_blank" rel="noopener noreferrer">狂神Nginx学习笔记</a></p>\n<p>Nginx 三大作用：1）动静分离  2）反向代理  3）负载均衡</p>\n<p>特点：一旦启动永远不需要重启，但是我们需要重新加载配置文件 <code>nginx -s reload</code></p>\n</blockquote>\n<p>常用配置：Nginx 代理后会丢失很多东西，比如 host.. 也可以使用 nginx 设置每一个请求的唯一 id</p>',r:{minutes:3.96,words:1187},t:"Nginx",y:"a"}}],["/code/408-Network/%E8%AE%A1%E7%BD%91%E9%97%AE%E9%A2%98%EF%BC%88%E5%BE%85%E8%A7%A3%E5%86%B3%EF%BC%89.html",{loader:()=>i.e(7786).then(i.bind(i,5746)),meta:{d:1712997543e3,e:"\n<h2>知识汇总</h2>\n<p>ICMP</p>\n<blockquote>\n<p>场景：感觉还是防火墙策略问题，1、检查到DNS服务器208.67.222.222的UDP53端口 2、检查到223.70.221.223和36.112.111.95 icmp、http（tcp80）、https（tcp443）\n【icmp】</p>\n<p><mark>ping命令使用ICMP协议来发送请求和接收回复</mark></p>\n<blockquote>\n<p>如果ping不通是证明icmp不可用吗</p>\n<p>如果您无法成功ping通目标主机，这并不意味着ICMP协议不可用。虽然ping命令使用ICMP协议来发送请求和接收回复，但有几种可能的原因导致ping不通：</p>\n<ol>\n<li><strong>目标主机配置或防火墙设置</strong>：目标主机可能配置了防火墙规则，阻止了ICMP请求的回复。这可能是出于安全或网络管理的考虑。在这种情况下，即使ICMP协议可用，您仍然无法通过ping命令与目标主机进行通信。</li>\n<li><strong>网络故障或路由问题</strong>：网络中的故障、路由问题或网络拥塞可能导致ping不通。即使ICMP协议正常工作，但如果网络中存在问题，数据包可能无法成功传输到目标主机或返回到源主机。</li>\n<li><strong>主机配置问题</strong>：源主机的配置问题也可能导致ping不通。例如，如果源主机的网络配置不正确，它可能无法正确路由ICMP数据包到目标主机。</li>\n<li><strong>目标主机禁用ICMP回复</strong>：目标主机可以选择禁用ICMP回复，以增加安全性或减少暴露。即使ICMP协议可用，目标主机也可能不会回复ping请求。</li>\n</ol>\n<p>因此，无法成功ping通目标主机并不一定意味着ICMP协议不可用。这可能是由于网络配置、防火墙规则、路由问题或目标主机的设置等其他因素引起的。如果您遇到ping不通的问题，建议检查网络配置、目标主机的防火墙设置以及网络基础设施的状态，以确定导致问题的根本原因。</p>\n</blockquote>\n<p>举例来说，当主机发送一个ICMP回显请求（Ping请求）时，它会将ICMP消息封装在IP数据包中，在网络中传输到目标主机，然后目标主机接收到该请求后，会生成一个ICMP回显回复（Ping回复），同样将其封装在IP数据包中进行传输。</p>\n<p>因此，ICMP并不是以IP形式交互数据包的协议，而是在IP网络中使用IP数据包来传输控制消息和错误报告的协议。</p>\n<ol>\n<li><strong>网络故障诊断</strong>：ICMP用于诊断网络故障。例如，当源主机希望测试与目标主机的连接是否正常时，可以发送一个ICMP回显请求（Ping请求），目标主机接收到请求后会发送回一个ICMP回显回复（Ping回复），从而确认连接的可用性。</li>\n</ol>\n</blockquote>",r:{minutes:7.02,words:2105},t:"Network FAQ",y:"a"}}],["/code/408-PC/MacOS.html",{loader:()=>i.e(4552).then(i.bind(i,9509)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>由于第一次接触MacOS，花了三周的星期六（三天）来搭这台MacOS</p>\n</blockquote>\n<h2>Software</h2>\n<blockquote>\n<p>Apr. 12th 2024</p>\n</blockquote>\n<ul>\n<li>Karabiner (win autohotkey)</li>\n<li>Alfred (Lib &amp; Everything)\n<ul>\n<li>in 关键词（可以搜文件里面的内容！）</li>\n</ul>\n</li>\n<li>Stats</li>\n<li>Clash</li>\n<li>Easydict</li>\n<li>IINA</li>\n<li>Omi</li>\n<li>Lunar（两台电脑连一台显示器软件方式切信号源通过 CLI）</li>\n<li>iShot</li>\n<li>腾讯会议</li>\n<li>Dash</li>\n<li>Espanso</li>\n<li>Chrome</li>\n<li>iTerm</li>\n<li>Karabiner</li>\n<li>Office</li>\n<li>Parallels</li>\n<li>QuickShade</li>\n<li>Paste</li>\n<li>SoundSource</li>\n<li>Sublime</li>\n<li>Lemon</li>\n<li>Thor</li>\n<li>Tiles + WGestures</li>\n<li>Postman Navicat IDEA PS Sourcetree TinyRDM</li>\n</ul>",r:{minutes:17.24,words:5173},t:"MacOS",y:"a"}}],["/code/408-PC/WTG%20(WindowsToGo).html",{loader:()=>i.e(2568).then(i.bind(i,160)),meta:{d:1712997543e3,e:"\n<h2>装机篇</h2>\n<blockquote>\n<p>自己折腾 WTG 我觉得需要记录的</p>\n</blockquote>\n<h3>隐藏系统磁盘</h3>\n<p>看萝卜头博客，我放在ali了  有批处理解决</p>\n<h3>U盘装两个系统-WTG&amp;微PE</h3>\n<blockquote>\n<p>这个踩坑严重。记住WTG里面装WEPE看 ali 也有问题（进不去WEPE好像）装的时候可能得取消一个勾选</p>\n</blockquote>\n<h3>重装系统坑</h3>\n<p>场景：使用常规方法，装载装不上（Windows 安装程序：<strong>我们无法创建新的分区，也找不到现有的分区。有关详细信息，请参阅安装日志文件。</strong>）</p>",r:{minutes:2.85,words:856},t:"WTG",y:"a"}}],["/code/408-PC/Windows_Software.html",{loader:()=>i.e(6478).then(i.bind(i,4858)),meta:{d:1715785276e3,e:'\n<p>C:\\Windows   路径 exe 文件可以直接 cmd 调用</p>\n<ul>\n<li>将文件重命名为 jq.exe</li>\n<li>cmd： jq --version</li>\n</ul>\n<h1>1.常用快捷键</h1>\n<ul>\n<li>\n<h4>win+ppause 看电脑系统参数</h4>\n</li>\n<li>\n<h4>Win+K 打开「连接」设备 快速连耳机   （暂时联想记忆为Link）</h4>\n</li>\n<li>\n<p>recent</p>\n</li>\n<li>\n<p>regedit</p>\n</li>\n<li>\n<h4>calc   mspaint   notepad</h4>\n</li>\n<li>\n<h4>ctrl+D 删除文件</h4>\n</li>\n<li>\n<h4>win+P设置屏幕投影功能</h4>\n</li>\n<li>\n<h4>在文本输入过程中，键入Windows徽标键  + 。 (句点) . 将显示表情符号键盘。</h4>\n</li>\n<li>\n<h4>Ctrl+Alt+Tab 打开切换界面，可以使用鼠标在打开的项目之间切换</h4>\n</li>\n<li>\n<h4>Alt+Esc 其实类似 Alt + Tab ，不过它是让我们在没有最小化的窗口之间快速切换；按第一次打开的顺序切换【自我感觉少一步视图，更快】</h4>\n<ul>\n<li>Alt+Esc键快速切换打开程序和Alt+Tab切换有两处不同，其他效果都是一样的。不同之一就是Alt+Esc没有缩略图预览，它是按照从右向左的顺序依次切换。</li>\n<li>当您只打开两个或三个窗口时， Alt+效果最好。Esc如果您打开的窗口超过三个，我们建议使用<a href="https://www.computerhope.com/jargon/a/alt-tab.htm" target="_blank" rel="noopener noreferrer">Alt+Tab</a>或<a href="https://www.computerhope.com/jargon/w/winkey.htm" target="_blank" rel="noopener noreferrer">Windows key</a>+<a href="https://www.computerhope.com/jargon/t/tab.htm" target="_blank" rel="noopener noreferrer">Tab</a>在打开的窗口之间切换。</li>\n</ul>\n</li>\n<li>\n<h4><mark>而当你摁下 Alt 键的同时摁 Prt Scr</mark>，它就会默认帮你截取当前窗口，而不是当前屏幕。这在一些媒体图片制作和屏幕截取中，非常方便。</h4>\n</li>\n<li>\n<p>win+.  /  win+;   emoji</p>\n</li>\n<li>\n<p>ctrl+esc 开始界面</p>\n</li>\n<li>\n<p>Win+1/2..会跳到下面任务栏指定的应用   偶然发现！！！</p>\n</li>\n<li>\n<p>ctrl + home 可以到头，而home只能到光标在这行行头</p>\n</li>\n<li>\n<p>ctrl+. 可以切换中英文标点</p>\n</li>\n<li>\n<p>Win+，：临时查看桌面</p>\n</li>\n</ul>',r:{minutes:8.73,words:2618},t:"Windows",y:"a"}}],["/code/408-PC/%E8%AE%A1%E7%BB%84%E5%8E%9F.html",{loader:()=>i.e(3195).then(i.bind(i,6961)),meta:{d:1712997543e3,e:'\n<h1><a class="header-anchor" href="#一、内存"><span>一、</span></a><a href="https://zhuanlan.zhihu.com/p/41187907" target="_blank" rel="noopener noreferrer">内存</a></h1>\n<h2>1. 理论</h2>\n<h4>1. 前言</h4>\n<p><strong>内存是计算机系统的主存储器</strong>\n介绍上面两个存储单位后就介绍下内存了。\n<strong>内存作为1个存储数据的存在， 有1个很重要的特性， 就是内存里的数据能被cpu直接访问。</strong>\ncpu能不能直接访问硬盘的数据呢， 不能。 只能通过把硬盘的数据先放到内存里， 然后再从内存里访问硬盘的数据。我们平时玩游戏碰上读图loading 进度条的这个过程， 就是把数据从硬盘读到内存的过程啊。 读完条后地图的数据就在内存中了。\n所以内存才是计算机系统的主存储器， 而硬盘是被分到跟光盘..u盘一类都是外部存储器</p>',r:{minutes:5.14,words:1543},t:"计组原",y:"a"}}],["/code/DistributedLock/DistributedLock.html",{loader:()=>i.e(3889).then(i.bind(i,3182)),meta:{d:1712997543e3,e:'\n<blockquote>\n<blockquote>\n<p>搞不懂事务和锁的概念-可以用@Transactional代替Redisson吗</p>\n<p>@Transactional 和 Redisson 是两个不同的概念和用途，它们不能直接相互替代。</p>\n<ul>\n<li>\n<p>@Transactional 处理数据库<strong>事务</strong>的一致性。可以确保一组数据库操作要么全部成功提交，要么全部回滚</p>\n</li>\n<li>\n<p>Redisson 是一个用于 Redis 的分布式对象的 Java 客户端库用于解决分布式环境中的线程<strong>并发</strong>访问问题</p>\n</li>\n</ul>\n<p>在某些情况下，您可以将 @Transactional 和 Redisson 结合使用。例如，在进行数据库操作之前，可以使用 Redisson 获取分布式锁来确保在事务期间对共享资源的独占访问</p>\n</blockquote>\n<p>【尚硅谷】分布式锁全家桶丨一套搞定Redis/Zookeeper/MySQL实现分布式锁     <a href="https://www.bilibili.com/video/BV1kd4y1G7dM" target="_blank" rel="noopener noreferrer">尚硅谷视频地址</a></p>\n<p>建议 SQL 和 Redis 都先到其客户端写好对应语句，再到 idea 构建代码，这样逻辑就清晰多了</p>\n<p>结合后面学的 GuliMall 缓存那一篇一起学习，这一篇回顾起来有点陌生可能没<strong>大处着眼</strong>。需要层层递进看解决什么问题带着3w才能学好！</p>\n<p>个人觉得 GuliMall 从本地锁开始层层递进阐述抛出问题好理解。而这一篇可能自己走马观花了</p>\n</blockquote>',r:{minutes:8.67,words:2602},t:"DistributedLock",y:"a"}}],["/code/GuliMall/Advanced.html",{loader:()=>i.e(630).then(i.bind(i,305)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p><a href="https://easydoc.net/s/78237135/ZUqEdvA4/hKJTcbfd" target="_blank" rel="noopener noreferrer">API 文档</a></p>\n<p><a href="https://www.bilibili.com/video/BV1np4y1C7Yf/" target="_blank" rel="noopener noreferrer">项目视频地址</a>，碰到忘记点搜本笔记配合视频再度复习！<a href="https://github.com/1024zzq/gulimall" target="_blank" rel="noopener noreferrer">自己代码地址</a></p>\n<p>Google 到的笔记，很详细比视频评论下我看初级篇找的要详细：<a href="https://blog.csdn.net/hancoder/article/details/106922139" target="_blank" rel="noopener noreferrer">别人笔记</a> <a href="https://gitee.com/AdverseQ/gulimall_Advanced" target="_blank" rel="noopener noreferrer">还是评论区的更贴近视频</a>  <a href="https://github.com/NiceSeason/gulimall-learning" target="_blank" rel="noopener noreferrer">别人代码</a>  建议搭配食用</p>\n<p>我看到后面看的两篇别人的笔记 <a href="https://gitee.com/lemon_wan/gulimall/blob/dev/%E9%AB%98%E7%BA%A7%E7%AF%87.md#8%E6%94%AF%E4%BB%98" target="_blank" rel="noopener noreferrer">一</a>    <a href="https://github.com/NiceSeason/gulimall-learning/blob/master/docs/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E%E2%80%94%E5%88%86%E5%B8%83%E5%BC%8F%E9%AB%98%E7%BA%A7.md#6-%E6%94%AF%E4%BB%98" target="_blank" rel="noopener noreferrer">二</a></p>\n<p>个人认为这四个功能为该项目最折磨人功能，一P能卡一两天</p>\n</blockquote>',r:{minutes:87.01,words:26102},t:"Advanced",y:"a"}}],["/code/GuliMall/Basic.html",{loader:()=>i.e(9812).then(i.bind(i,9320)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>谷粒商城是一个B2C模式的电商平台，销售自营商品给客户</p>\n<p><a href="https://www.bilibili.com/video/BV1np4y1C7Yf?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">雷神B站教程</a>，分基础、高级、集群三篇。“不要做锤子之神，要做雷霆之神”</p>\n<p><a href="https://easydoc.net/s/78237135/ZUqEdvA4/hKJTcbfd" target="_blank" rel="noopener noreferrer">接口文档地址</a>    一些业务的实现感觉就挺贴近算法的，自我感觉数据库的设计是最重要的</p>\n<p><a href="https://gitee.com/AdverseQ/gulimall-mall-front-end" target="_blank" rel="noopener noreferrer">别人前端代码</a>            <a href="https://gitee.com/AdverseQ/gulimall_Advanced" target="_blank" rel="noopener noreferrer">别人后端代码</a></p>\n<p>Google到的笔记很详细：<a href="https://blog.csdn.net/hancoder/article/details/106922139" target="_blank" rel="noopener noreferrer">别人笔记</a>   <a href="https://github.com/NiceSeason/gulimall-learning" target="_blank" rel="noopener noreferrer">别人代码</a></p>\n<p>最高境界就是数据库设计师和系统架构师</p>\n</blockquote>',r:{minutes:34.07,words:10221},t:"Basic",y:"a"}}],["/code/GuliMall/ElasticSearch.html",{loader:()=>i.e(6473).then(i.bind(i,7248)),meta:{d:1712997543e3,e:'\n<p>Port：9200              kibana：5601</p>\n<blockquote>\n<p><a href="https://baike.baidu.com/item/%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E" target="_blank" rel="noopener noreferrer">全文搜索</a>属于最常见的需求，开源的 <a href="https://www.elastic.co/" target="_blank" rel="noopener noreferrer">Elasticsearch</a> （以下简称 Elastic）是目前全文搜索引擎的首选。</p>\n<p>它可以快速地<strong>储存、搜索和分析海量数据</strong>。维基百科、Stack Overflow、Github 都采用它。</p>\n<h3>Elasticsearch: Store, Search, and Analyze</h3>\n<p>秒级的从我们海量数据中检索到我们感兴趣的数据，因为放在内存中。</p>\n<p>将MySQL数据往ES里面存一份</p>\n</blockquote>',r:{minutes:4.81,words:1444},t:"Elasticsearch",y:"a"}}],["/code/JUC/JUC.html",{loader:()=>i.e(5589).then(i.bind(i,5679)),meta:{d:1712997543e3,e:'\n<p>Links that usually browsed:</p>\n<p>[2）new ThreadPoolExecutor(线程池七大参数)](#2）new ThreadPoolExecutor(线程池七大参数))</p>\n<blockquote>\n<p>2022/11/9 学于    <a href="https://www.bilibili.com/video/BV18b411M7xz/?spm_id_from=333.999.top_right_bar_window_default_collection.content.click&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">教学视频</a>         <a href="./2019%E4%BA%92%E8%81%94%E7%BD%91%E9%9D%A2%E8%AF%95%E9%A2%98%E7%AC%AC2%E5%AD%A3.mmap">脑图</a>        <a href="https://gitee.com/moxi159753/LearningNotes/blob/master/%E6%A0%A1%E6%8B%9B%E9%9D%A2%E8%AF%95/JUC" target="_blank" rel="noopener noreferrer">Gitee 别人笔记（全）</a>      <a href="https://blog.csdn.net/u011863024/article/details/114684428" target="_blank" rel="noopener noreferrer">别人的笔记 </a>    21:32 预计 每天 2h  11d 完成！于22nd</p>\n<p>会用只是 API 调用工程师、CURD 程序员！缩招不是不招聘，而是招聘更多更加优质的开发工程师。1 拿 1.8  干  3</p>\n<p>大学毕业后丧失学习能力的90后将彻底被挤出 IT 行业</p>\n</blockquote>',r:{minutes:52.05,words:15615},t:"JUC & JVM +GC",y:"a"}}],["/code/JVM/JVM.html",{loader:()=>i.e(1177).then(i.bind(i,1551)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>JVM 相关的知识点，一般是大厂才会问到，面试中小厂就没必要准备了。JVM 面试中比较常问的是 <a href="https://javaguide.cn/java/jvm/memory-area.html" target="_blank" rel="noopener noreferrer">Java 内存区域</a>、<a href="https://javaguide.cn/java/jvm/jvm-garbage-collection.html" target="_blank" rel="noopener noreferrer">JVM 垃圾回收</a>、<a href="https://javaguide.cn/java/jvm/classloader.html" target="_blank" rel="noopener noreferrer">类加载器和双亲委派模型</a> 以及 JVM 调优和问题排查（我之前分享过一些<a href="https://t.zsxq.com/0bsAac47U" target="_blank" rel="noopener noreferrer">常见的线上问题案例</a>，里面就有 JVM 相关的）。</p>\n</blockquote>',r:{minutes:10.33,words:3100},t:"JVM",y:"a"}}],["/code/JavaFramework/MyBatis.html",{loader:()=>i.e(4484).then(i.bind(i,5381)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>2022/1/13  自己很久以前学了这一套但学的不系统，现在花3-4天重新过一遍，并归纳总结为笔记。 from: XD</p>\n<p>MyBatis 框架： MyBatis 本是 apache 的一个开源项目 iBatis, 2010 年这个项目由 apache software foundation 迁移到了 google code，并且改名为 MyBatis 。2013 年 11 月迁移到 Github。</p>\n<p>XD <code>MyBatis本身并不提供连接池功能，它主要关注于SQL映射和数据库操作的框架。连接池是与数据库交互的一部分，但并不是MyBatis默认的方式。</code></p>\n<p>在使用MyBatis时，你可以选择使用第三方的连接池库来管理数据库连接。常见的连接池库包括：</p>\n<p>Apache Commons DBCP\n<code>HikariCP</code>\nC3P0\n<code>Druid</code></p>\n</blockquote>",r:{minutes:30.28,words:9083},t:"MyBatis",y:"a"}}],["/code/JavaFramework/SpringBoot.html",{loader:()=>i.e(5668).then(i.bind(i,5773)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>三刷总算想起做点笔记，这点很重要   <a href="https://www.yuque.com/atguigu/springboot" target="_blank" rel="noopener noreferrer">语雀官方笔记</a>   重点看源码讲解的视频、Web开发这一章</p>\n<p><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html" target="_blank" rel="noopener noreferrer">每导入一个 starter 改写哪些配置直接看官网！！！有些什么配置一目了然！</a></p>\n<p>还有自动化配置文档，这个倒idea双shift找properties也行</p>\n<p>看到了P25，由于求职形势逼迫。搁浅... 做项目快速上手能干，往后再回头了</p>\n<p>补充面试常问：SpringBoot：</p>\n<ol>\n<li>自动装载</li>\n<li><code>怎么实现starter</code> （看我SpringBoot代码的Demo，要知道流程）</li>\n<li>bean的生命周期</li>\n</ol>\n</blockquote>',r:{minutes:49.27,words:14781},t:"SpringBoot2",y:"a"}}],["/code/JavaFramework/SpringCloud.html",{loader:()=>i.e(8231).then(i.bind(i,4318)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>尚硅谷周阳老师 2022/5/23   详细笔记看脑图 和 <a href="https://blog.csdn.net/u011863024/article/details/114298270" target="_blank" rel="noopener noreferrer">别人的笔记</a> 和 <a href="https://gitee.com/lixiaogou/cloud2020/tree/master/" target="_blank" rel="noopener noreferrer">别人的代码</a>，这里只记录于自己而言是重点的内容</p>\n</blockquote>',r:{minutes:50.35,words:15104},t:"SpringCloud",y:"a"}}],["/code/JavaFramework/SpringIntegration.html",{loader:()=>i.e(3452).then(i.bind(i,8957)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p><a href="https://www.bilibili.com/video/BV1Ak4y1k7B6/?spm_id_from=333.337.search-card.all.click&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">视频讲的特好</a>\n应用集成模式与概念\n两个系统，独立开发 独立运行的   系统集成</p>\n</blockquote>\n<h2>一、应用集成模式与概念</h2>\n<h5>常见集成模式：</h5>',r:{minutes:1.28,words:385},t:"SpringIntegration",y:"a"}}],["/code/JavaFramework/SpringSecurity.html",{loader:()=>i.e(2766).then(i.bind(i,4007)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>6 h   SpringSecurity + JWT   核心：认证 &amp; 授权</p>\n<p><a href="https://www.yuque.com/huanfqc/springsecurity/springsecurity#WkaHz" target="_blank" rel="noopener noreferrer">别人笔记</a></p>\n<p>题外话：ali 的 SpringBoot 启动模板真不错，还带测试Controller+html\nhttps://start.aliyun.com/</p>\n</blockquote>\n<h2>一、铺垫</h2>',r:{minutes:13.08,words:3925},t:"SpringSecurity",y:"a"}}],["/code/JavaSE/Interview-Java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E7%B2%BE%E8%AE%B2.html",{loader:()=>i.e(8900).then(i.bind(i,9533)),meta:{d:1712997543e3,e:"\n<h1>01 谈谈你对Java平台的理解？</h1>\n<p>从你接触 Java 开发到现在，你对 Java 最直观的印象是什么呢？是它宣传的 “Write once, run anywhere”，还是目前看已经有些过于形式主义的语法呢？你对于 Java 平台到底了解到什么程度？请你先停下来总结思考一下。</p>\n<p>今天我要问你的问题是，谈谈你对 Java 平台的理解？“Java 是解释执行”，这句话正确吗？</p>\n<h2>典型回答</h2>\n<p>Java 本身是一种面向对象的语言，最显著的特性有两个方面，一是所谓的“<strong>书写一次，到处运行</strong>”（Write once, run anywhere），能够非常容易地获得跨平台能力；另外就是<strong>垃圾收集</strong>（GC, Garbage Collection），Java 通过垃圾收集器（Garbage Collector）回收分配内存，大部分情况下，程序员不需要自己操心内存的分配和回收。</p>",r:{minutes:10.06,words:3019},t:"Interview",y:"a"}}],["/code/JavaSE/Interview-%E5%B0%9A%E7%A1%85%E8%B0%B7%E7%BB%8F%E5%85%B8Java%E9%9D%A2%E8%AF%95%E9%A2%98%E7%AC%AC%E4%B8%80%E5%AD%A3.html",{loader:()=>i.e(112).then(i.bind(i,2186)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>Title 为评论区别人的笔记，很详细</p>\n<p>这一季基础的东西，每一集一道面试题。我全是错的，没对过一道  230920</p>\n</blockquote>\n<h2><a class="header-anchor" href="#i"><span></span></a><a href="https://www.bilibili.com/video/BV1Eb411P7bP/?vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">i++</a></h2>',r:{minutes:4.61,words:1383},t:"InterviewMV",y:"a"}}],["/code/JavaSE/JavaSE.html",{loader:()=>i.e(1227).then(i.bind(i,1355)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>建议再优化目录，把自己总结的 / 康师傅的 分起</p>\n</blockquote>\n<p>TOC--MD内容表</p>\n<p>Table Of Contents (目录)</p>\n<p>Java 集合框架概览</p>\n<figure><img src="http://images.zzq8.cn/img/java-collection-hierarchy.png" alt="Java 集合框架概览" tabindex="0" loading="lazy"><figcaption>Java 集合框架概览</figcaption></figure>\n<p>ArrayDeque 双端队列是后出的API，LeetCode常用当模拟栈、队列</p>',r:{minutes:68.76,words:20628},t:"javaSE",y:"a"}}],["/code/JavaSE/Lambda.html",{loader:()=>i.e(7336).then(i.bind(i,7244)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>自己买了一本小书很不错  《Java 8函数式编程》</p>\n<p>Lambda vs Stream</p>\n<p>Lambda表达式是一种简洁而强大的语法特性，它允许我们以更紧凑的方式编写匿名函数。Lambda表达式可以作为参数传递给方法或函数式接口，并且可以更方便地处理集合数据</p>\n<p>stream流可以看作是for循环的一个语法糖；\nstream有并发流，在超过百万级数据量时，使用stream流效率更高；</p>\n</blockquote>\n<h2>Zero、XD</h2>\n<h2>MP 框架API(Get It)</h2>\n<p>MP中有Lambda的Wrapper（为了避免了字段硬编码和拼写错误的问题，即使用普通QueryWrapper的缺陷）</p>",r:{minutes:13.02,words:3906},t:"Lambda",y:"a"}}],["/code/JavaSE/Planet-JavaGuide.html",{loader:()=>i.e(8996).then(i.bind(i,3118)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p><a href="https://www.yuque.com/snailclimb/mf2z3k?key=cnk4" target="_blank" rel="noopener noreferrer">《Java面试指北》</a></p>\n<p>先放到这一个文件，再去和自己的笔记合并。。。按模块汇总到自己的里面</p>\n</blockquote>\n<h1>系统设计&amp;场景题</h1>\n<h2>* 如何解决大文件上传问题?</h2>\n<p>如果你的项目涉及到文件上传的话,面试官很可能会问你这个问题.</p>\n<p>我们先看第一个场景:大文件上传中途,突然失败  试想一个,你想上传一个5g的视频,上传进度到99%的时候,特么的,突然网络断了,这个时候,你发现自己竟然需要重新上传.我就问你抓狂不? 有没有解决办法呢?</p>',r:{minutes:42.28,words:12683},t:"JavaGuide",y:"a"}}],["/code/JavaSE/Steam.html",{loader:()=>i.e(1587).then(i.bind(i,950)),meta:{d:1712997543e3,e:'\n<h1>常用的 API</h1>\n<h2>* flatMap()</h2>\n<blockquote>\n<p>在 Java 中，<code>flatMap()</code> 是 Stream API 中的一个方法，它用于将流中的每个元素映射为一个流，然后将这些流合并为单个流。它的作用是将多个流扁平化为一个流，常用于处理嵌套集合或映射的情况。</p>\n</blockquote>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nestedList </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    Arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    Arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    Arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> flattenedList </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> nestedList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">flatMap</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(List</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">stream)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Collectors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(flattenedList);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.57,words:171},t:"Stream",y:"a"}}],["/code/Linux/LinuxDevEnv.html",{loader:()=>i.e(9443).then(i.bind(i,444)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>以前碰过 Redis 没设密码被挖矿，现在设成简单密码依旧。。。</p>\n</blockquote>\n<h2>1.基础环境</h2>\n<h3><a class="header-anchor" href="#_1-1-docker"><span>1.1.</span></a><a href="https://www.runoob.com/docker/centos-docker-install.html" target="_blank" rel="noopener noreferrer">Docker</a></h3>\n<blockquote>\n<p>实测用idea操作Docker比用 xshell 舒服太多了！！！</p>\n</blockquote>',r:{minutes:13.5,words:4051},t:"Linux Docker",y:"a"}}],["/code/Linux/LinuxRef.html",{loader:()=>i.e(604).then(i.bind(i,1397)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>把macos 笔记整合进来，然后把环境指南感觉可以删了</p>\n</blockquote>\n<h3>Shell CLI</h3>\n<blockquote>\n<p>https://wangchujiang.com/linux-command/\n搜 Linux 命令解释好使！！！</p>\n</blockquote>\n<ul>\n<li>\n<p>创建并写入内容   <code>echo "test" &gt; file1.txt</code></p>\n<ul>\n<li>实测多次运行就是追加的形式，追加行！</li>\n</ul>\n</li>\n<li>\n<p>⭐️ grep "password" /var/log/mysqld.log (强大的文本搜索工具)</p>\n<ul>\n<li>grep -rF xxx .命令作用  （Linux 查日志命令需要好好学习，MsgBroker 搜 id）</li>\n<li>cat access.log | grep \'payed\'</li>\n</ul>\n</li>\n<li>\n<p>⭐️ <code>echo "547061946" | sudo -S &lt;command&gt;</code></p>\n<ul>\n<li>在这个命令中，<code>&lt;command&gt;</code> 是你要以超级用户身份运行的实际命令。</li>\n<li>将密码作为输入通过管道传递给 <code>sudo</code> 命令，并使用 <code>-S</code> 选项我猜是 Standard 读取密码。</li>\n</ul>\n</li>\n<li>\n<p>⭐️ export -p 显示所有环境变量</p>\n</li>\n<li>\n<p>⭐️ $ 符号通常用于引用环境变量的值，echo $HOME 有一个HOME的环境变量</p>\n</li>\n<li>\n<p>⭐️ 在macOS终端中，可以使用以下命令来查看当前使用的shell：bash</p>\n</li>\n<li>\n<p>⭐️ linux 自带任务轮询  <code>crontab -e</code></p>\n<ul>\n<li>crond 是linux下用来周期性的执行某种任务或等待处理某些事件的一个守护进程，与windows下的计划任务类似</li>\n</ul>\n</li>\n<li>\n<p>⭐️ pkill = 进程名    //pkill nginx  #杀死所有的nginx</p>\n</li>\n<li>\n<p>⭐️ lsof -i:8080   //查看8080端口占用</p>\n</li>\n<li>\n<p><code>nohup java -jar myblog-1.jar --server.port=80 &amp;</code></p>\n</li>\n<li>\n<p><code>tail -f nohup.out</code></p>\n<ul>\n<li>就可以实时看到这个 jar 的输出运行日志！！！（"f"代表"follow"）</li>\n</ul>\n</li>\n<li>\n<p>df -h  可以查linux内存占用，一般看类似 /dev/vda1     ‘/’开头的路径的容量就行！！！</p>\n<ul>\n<li>\n<p>内存不足会导致的场景-XD均已实践以下两点：</p>\n<ol>\n<li><strong>xftp软件上传文件不到云服务器</strong></li>\n<li><strong>mysql 无法创建数据库</strong></li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>free -h</p>\n</li>\n<li>\n<p>which nginx</p>\n<ul>\n<li>如果您不确定 Nginx 的<strong>可执行文件</strong>在哪个目录下，可以通过在终端中输入 which nginx 命令来查找。该命令会返回 Nginx 可执行文件的完整路径。  Nginx 的可执行文件通常位于 /usr/sbin/nginx 目录下   注意不是/usr/bin/nginx</li>\n</ul>\n</li>\n<li>\n<p>whereis <mark>找文件</mark></p>\n</li>\n<li>\n<p><code>find / -type d -name "*redis*"</code>  <mark>找文件夹</mark></p>\n</li>\n<li>\n<p>kill -9 进程ID（PID）</p>\n</li>\n<li>\n<p>ps -e|grep java</p>\n</li>\n<li>\n<p>netstat -nlp |grep :80  # 看指定端口 pid，方便后面 kill</p>\n</li>\n<li>\n<p><code>export vs set</code> export 类似 win 的 <code>set MY_VARIABLE=value</code>，设置一个当前窗口会话的临时变量</p>\n<ul>\n<li>注意：export https_proxy=http://127.0.0.1:7890 。。。只在当前 cmd 中生效，一开始不知道！！！</li>\n</ul>\n</li>\n<li>\n<p>vim</p>\n<ul>\n<li>/ 关键字，回车即可。此为从文档当前位置向下查找关键字，按n键查找关键字下一个位置；</li>\n<li>？关键字，回车即可。此为从文档挡圈位置向上查找关键字，按n键向上查找关键字；</li>\n</ul>\n</li>\n</ul>',r:{minutes:6.6,words:1981},t:"LinuxRef",y:"a"}}],["/code/MQ/RabbitMQ.html",{loader:()=>i.e(7347).then(i.bind(i,4437)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>MessageQueue，MQ</p>\n<p>借鉴 <a href="https://javaguide.cn/high-performance/message-queue/rocketmq-intro.html" target="_blank" rel="noopener noreferrer">JavaGuide</a></p>\n</blockquote>\n<h2>一、前言</h2>\n<h3>1.三大作用</h3>\n<blockquote>\n<p>联想订票系统，订票业务和短信业务</p>\n</blockquote>\n<h4>1.1 异步与解耦</h4>\n<p>主要就是为了 <strong>异步</strong> 用</p>',r:{minutes:19.36,words:5809},t:"RabbitMQ",y:"a"}}],["/code/NoSQL/Redis.html",{loader:()=>i.e(9507).then(i.bind(i,3334)),meta:{d:1712997543e3,e:"\n<p>Redis的速度⾮常的快，单机的Redis就可以⽀撑每秒十几万的并发，相对于MySQL来 说，性能是MySQL的⼏⼗倍。</p>\n<blockquote>\n<p>Q: Redis的lO性能比数据库高的原因是什么？</p>\n<ol>\n<li>基于内存，sql基于磁盘 - 所以少了一步磁盘IO</li>\n<li>单线程模型 - 少了上下文切换开销</li>\n<li>非阻塞IO - 6.0往后出现<strong>网络IO多路复用</strong>    TODO？  允许一个线程同时监听和处理多个网络连接的 I/O 操作</li>\n<li><strong>数据结构简单重设计</strong> - SDS？压=      TODO？<em>Sds</em>（Simple Dynamic String，简单动态字符串）是Redis 底层所使用的字符串表示\nC 是char 不足（以空字符'\\0'结尾） 总的来说，Redis 的 SDS 结构在原本字符数组之上，增加了三个元数据：len、alloc、flags，<strong>用来解决 C 语言字符串的缺陷</strong>\n----C语⾔实现，优化过的数据结构，基于⼏种基础的数据结构，redis做了⼤量的优 化，性能极⾼</li>\n</ol>\n<hr>\n<p>Q: 能说一下I/O多路复用吗？</p>\n<p>引用知乎上一个高赞的回答来解释什么是I/O多路复用。假设你是一个老师，让30个 学生解答一道题目，然后检查学生做的是否正确，你有下面几个选择：</p>\n<ul>\n<li>第一种选择：按顺序逐个检查，先检查A，然后是B，之后是C、D。。。这中间 如果有一个学生卡住，全班都会被耽误。这种模式就好比，你用循环挨个处理 socket，根本不具有并发能力。 <strong>（XD 排队一个个检查）</strong></li>\n<li>第二种选择：你创建30个分身，每个分身检查一个学生的答案是否正确。 这种 类似于为每一个用户创建一个进程或者- 线程处理连接。</li>\n<li>第三种选择，你站在讲台上等，谁解答完谁举手。这时C、D举手，表示他们解答 问题完毕，你下去依次检查C、D的答案，然后继续回到讲台上等。此时E、A又 举手，然后去处理E和A。 <strong>（XD 举手到坐检查）</strong></li>\n</ul>\n<p>第一种就是阻塞IO模型，第三种就是I/O复用模型。\nIO多路复用通过使用特定的系统调用（如 select、poll、epoll等）来解决这些问题。<strong>这些系统调用允许我们同时监视多个I/O流，并在有 I/O事件准备好时进行通知。</strong></p>\n</blockquote>",r:{minutes:13.98,words:4195},t:"Redis",y:"a"}}],["/code/NoSQL/RedisAdvanced.html",{loader:()=>i.e(5965).then(i.bind(i,5791)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p><a href="https://www.bilibili.com/video/BV1cr4y1671t/?spm_id_from=333.337.search-card.all.click&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">一个专门学习 Redis 而生的项目</a>，参考大众点评做的。理论+实战   42h / 3 = 14\nHere the link is an instructional video, and the title link is a navigation video</p>\n<p>set: 共同关注\nzset: 排行榜应用实现，取Top N\nGeospatial 地理位置</p>\n</blockquote>',r:{minutes:4.8,words:1439},t:"黑马点评",y:"a"}}],["/code/RuoYi/RuoYi.html",{loader:()=>i.e(6057).then(i.bind(i,3662)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>该项目没用 MP，整完这个可以再整 <a href="https://doc.ruoyi.vip/ruoyi-cloud/" target="_blank" rel="noopener noreferrer">RuoYi-Cloud</a></p>\n<p>基于SpringBoot、Spring Security、Jwt、Vue的前后端分离的后台管理系统   【权限管理系统】</p>\n<p>楠哥的太浅了，粗略过了一遍\n现在在过 <a href="https://www.bilibili.com/video/BV1zm4y1A7yQ?p=7&amp;spm_id_from=pageDriver&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">王清江</a> 的  约等于 26 h   26/3=9          哪些点想看就可以看他<a href="https://mp.weixin.qq.com/mp/appmsgalbum?search_click_id=4558257005716448117-1704794396839-8017893460&amp;__biz=Mzg5OTgxOTg0Ng==&amp;action=getalbum&amp;album_id=2441331662295973890#wechat_redirect" target="_blank" rel="noopener noreferrer">公众号的讲义</a></p>\n</blockquote>',r:{minutes:12.17,words:3652},t:"RuoYi-Vue",y:"a"}}],["/code/SQL/MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2.html",{loader:()=>i.e(7578).then(i.bind(i,2013)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>取自极客时间专栏，用于自己复习！详细评论看官方的  作者：<strong>林晓斌</strong>，网名“丁奇”，前阿里资深技术专家</p>\n<p>原理先行，再实践验证。切记不要不懂装懂！</p>\n</blockquote>\n<h2>一、基础篇</h2>\n<h2>01丨基础架构：一条SQL查询语句是如何执行的？</h2>\n<h3>1.MySQL 查询拆解</h3>\n<blockquote>\n<p>一条查询语句的执行过程一般是经过连接器、分析器、优化器、执行器等功能模块，最后到达存储引擎。</p>\n</blockquote>\n<p>看一个事儿千万不要直接陷入细节里，你应该先鸟瞰其全貌，这样能够帮助你从高维度理解问题。</p>",r:{minutes:107.73,words:32320},t:"MySQL实战45讲",y:"a"}}],["/code/SQL/Mysql%E7%B4%A2%E5%BC%95_%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93.html",{loader:()=>i.e(4901).then(i.bind(i,3254)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>该文档得重新索引归类，不然太乱了。。。不好检索</p>\n</blockquote>\n<blockquote>\n<p>索引(Index)是帮助MySQL高效获取数据的数据结构。 0.5s    0.000001s</p>\n<p>索引是数据结构</p>\n</blockquote>\n<p>使用<code>select…for update</code>给数据加锁的时候，咱们需要注意锁的级别，MySQL InnoDB 默认行级锁。</p>\n<p><mark>行级锁都是基于索引的，如果一条 SQL 语句用不到索引是不会使用行级锁的，而会使用表级锁把整张表锁住，这点需要咱们格外的注意</mark></p>",r:{minutes:36.35,words:10905},t:"MySQL索引",y:"a"}}],["/code/ZOther/FrontEnd.html",{loader:()=>i.e(6483).then(i.bind(i,7198)),meta:{d:1717228958e3,e:"\n<h2>Vue</h2>\n<p>vue项目中package.json文件的dependencies和devDependencies有什么区别</p>\n<ul>\n<li><code>dependencies</code> 中的包是项目运行时必需的核心依赖，而 <code>devDependencies</code> 中的包是开发过程中使用的辅助依赖。</li>\n<li>生产环境部署时，只需要安装 <code>dependencies</code> 中的包，而开发环境需要安装 <code>dependencies</code> 和 <code>devDependencies</code> 中的包。</li>\n</ul>",r:{minutes:1.93,words:579},t:"大前端",y:"a"}}],["/code/ZOther/Git_SVN.html",{loader:()=>i.e(573).then(i.bind(i,6071)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>https://m.runoob.com/git/git-basic-operations.html</p>\n</blockquote>\n<img src="https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg" alt="img" style="zoom:150%;">\n<ul>\n<li>workspace：工作区</li>\n<li>staging area：暂存区/缓存区</li>\n<li>local repository：版本库或本地仓库</li>\n<li>remote repository：远程仓库</li>\n</ul>',r:{minutes:12.79,words:3836},t:"Git-云服务器使用",y:"a"}}],["/code/ZOther/GitHubActions.html",{loader:()=>i.e(4853).then(i.bind(i,7363)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p><a href="https://www.bilibili.com/video/BV1C34y1t79H/?spm_id_from=333.788.recommend_more_video.1&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">100秒解释什么是DevOps CI/CD 中国DevOps社区</a></p>\n<p><a href="https://www.bilibili.com/video/BV1RE411R7Uy/?spm_id_from=333.337.search-card.all.click&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">【CICD】github新功能actions全方位讲解！！</a></p>\n<p>起因：LeetCode 自动打卡签到领积分        可见Actions可以拿来跑一些好用的脚本，例如定时签到类的 / 看视频感觉更多的是持续集成</p>\n<p>1）可以围绕自己的仓库做一些流程自动化</p>\n<p>2）CI/CD代表<code>持续集成</code>和<code>持续交付</code>  自动化构建部署    <strong>Continuous Integration/Continuous Deployment</strong></p>\n<p>​\tCI：新代码更新集成到现有的代码库中（GitHub Actions就是这个服务）</p>\n<p><strong>CI/CD提供了如下两个主要的好处：它可以帮助你将原本必须由开发人员手动完成的事情自动化（应用交付给客户时候需要经过三个步骤：测试、构建、部署），从而提高你的速度；它也会在小问题发展成重大灾难之前及早地发现它们，从而提高代码质量。</strong></p>\n<p>Devops的核心实践之一是持续集成：好像是有个CI服务器。就是为了避免下面的问题。   我理解：GitHub Actions不同的是\t不需要CI服务器了，直接GitHub提供云中的Linux容器给你操作  1）get code 2）setup node 3）test/build/dploy</p>\n<p>My：持续集成的流水线，以前的问题 码农1写了个API 码农2也写了一个UI  但是合并时候发现不兼容  <strong>合并地狱</strong>就需要推翻。而CI/CD会持续集成，每天提交的都会Actions跑看有没有问题。Actions里面写了测试...有问题就会马上显示出来！</p>\n<p>https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html</p>\n</blockquote>',r:{minutes:2.46,words:738},t:"GitHub Actions",y:"a"}}],["/code/ZOther/Maven.html",{loader:()=>i.e(5572).then(i.bind(i,8967)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>鱼皮这篇讲的细：https://mp.weixin.qq.com/s/mOFjOVYrM_b9I2UlNgeGxg</p>\n</blockquote>\n<h2>TODO</h2>\n<p>https://blog.csdn.net/weixin_45433031/article/details/125284806 （还需理解到maven笔记，springboot打包插件如果我不加以下会有什么影响：）</p>\n<h1>*）Pom文件/Maven：</h1>\n<ul>\n<li>\n<h4><a class="header-anchor" href="#pom-xml-relativepath"><span></span></a><a href="https://blog.csdn.net/gzt19881123/article/details/105255138" target="_blank" rel="noopener noreferrer">Pom.xml  -&gt; &lt;relativePath&gt;</a></h4>\n<figure><img src="https://images.zzq8.cn/img/202210171022851.png" alt="image-20221017102235784" tabindex="0" loading="lazy"><figcaption>image-20221017102235784</figcaption></figure>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>设定一个空值将始终从仓库中获取，不从本地路径获取，如&lt;relativePath/&gt; 看这句就很明了了！这里就是去本地../bokeerp路径去拿这个pom文件</span></span>\n<span class="line"><span>Maven parent.relativePath</span></span>\n<span class="line"><span>默认值为../pom.xml</span></span>\n<span class="line"><span>查找顺序：relativePath元素中的地址–本地仓库–远程仓库</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark><strong>Maven 寻找父模块pom.xml 的顺序如下：</strong></mark></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span> (1)  first in the reactor of currently building projects</span></span>\n<span class="line"><span>       这里一个maven概念 反应堆（reactor ），</span></span>\n<span class="line"><span>       意思就是先从工程里面有依赖相关的模块中找你引入的</span></span>\n<span class="line"><span>       parent 的pom.xml，</span></span>\n<span class="line"><span>     </span></span>\n<span class="line"><span> (2) then in this location on the filesystem</span></span>\n<span class="line"><span>      然后从 你定义的  &lt;relativePath &gt; 路径中找，</span></span>\n<span class="line"><span>      当然你如果只是 /  即空值，则跳过该步骤，  </span></span>\n<span class="line"><span>      默认值 ../pom.xml 则是从上级目录中找啦。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span> (3)  then the local repository</span></span>\n<span class="line"><span>    这个就不说了，如果 （1） （2） 步骤没有则从 本地仓库找啦。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span> (4) and lastly in the remote repo</span></span>\n<span class="line"><span>  这个还用说吗，上面都找不到了，最后只能从远程仓库找啦，再找不到就报错给你看 </span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>一般新建 Spring Boot 工程，默认是 &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt; ，意思就是不会从上层目录寻找。会直接先从 local repository，如果没有则会从 remote repo 寻找，如果也没有，则报错。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<h4></h4>\n<ul>\n<li>\n<p>场景：我发现引入了data-redis，也要引入commons-pool2   不然启动报错</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-data-redis&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;org.apache.commons&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;commons-pool2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原因：因为 <code>spring-boot-starter-data-redis</code> 下面的 <code>lettuce-core</code></p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;org.apache.commons&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;commons-pool2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;2.8.1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;compile&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">optional</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">optional</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>chatgpt: 在 Maven 的 pom.xml 文件中，可以使用 <code>&lt;optional&gt;</code> 标签来指定一个依赖是否是可选的</p>\n<p>这样的设置意味着，当这个依赖被其他模块引用时，它不会自动传递给这些模块。也就是说，如果一个模块引用了这个依赖，但是没有显式声明它，那么这个依赖不会被自动包含在该模块的依赖列表中。</p>\n<p>使用 <code>&lt;optional&gt;</code> 标签可以有效地控制依赖的传递性，避免不必要的依赖冲突和版本冲突。例如，如果一个项目需要使用某个第三方库的某个功能，但是这个库又依赖于另外一个库，而这个库和项目中的其他依赖产生了冲突，就可以将这个库设置为可选依赖，只在需要时显式引入，避免不必要的冲突。</p>\n<p>另外，值得注意的是，当一个依赖被设置为可选依赖时，它的传递性也会被取消。这意味着，如果这个依赖还依赖了其他库，这些库也不会自动传递给项目中的其他模块。如果需要使用这些库，也需要显式引入它们。</p>\n<p>总之，使用 <code>&lt;optional&gt;</code> 标签可以控制依赖的传递性，避免不必要的依赖冲突和版本冲突，但是需要注意，它的传递性也会被取消，需要手动处理相关的依赖。</p>\n<blockquote>\n<p>Q: 2.3.12.RELEASE版本的springboot引入spring-boot-starter-data-redis为什么还需要显式的引入commons-pool2才能正常启动项目</p>\n<p>在 Spring Boot 2.3.12.RELEASE 版本中，<code>spring-boot-starter-data-redis</code> 依赖中的 <code>lettuce-core</code> 版本为 <code>5.3.2.RELEASE</code>，它自带了 <code>commons-pool2</code> 依赖。但是在这个版本的 Spring Boot 中，<code>commons-pool2</code> 的依赖是以 <code>&lt;optional&gt;true&lt;/optional&gt;</code> 的方式声明的，这意味着在默认情况下不会被引入。</p>\n<p>如果你不显式地引入 <code>commons-pool2</code> 的依赖，而是只依赖于 <code>spring-boot-starter-data-redis</code>，那么在启动应用程序时，就会出现类似于“java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig”的错误，因为缺少了 <code>commons-pool2</code> 的依赖。</p>\n<p>为了解决这个问题，你需要在你的 <code>pom.xml</code> 文件中显式地引入 <code>commons-pool2</code> 的依赖，这样它才会被正确地加载。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>',r:{minutes:9.97,words:2991},t:"Maven",y:"a"}}],["/code/ZOther/Regexr.html",{loader:()=>i.e(444).then(i.bind(i,5390)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>正则很多地方都可以用，各类文本编辑器！处理文本等工作效率 up     XD：受益匪浅，就在title网站去学！！！</p>\n</blockquote>\n<h1>一、日常问题</h1>\n<h2>1.匹配空行</h2>\n<blockquote>\n<p><code>^\\s*$</code>                     （* 指空格出现 0 次或多次）-&gt;  * 匹配0个或更多前面的标记。</p>\n</blockquote>\n<p>1）除了常使用 ^ 另外 $ 也可以熟练用起来</p>\n<p>2）正则匹配0次必须加星</p>\n<h2>2.* / + 使用错误</h2>",r:{minutes:2.84,words:852},t:"Regular Expression",y:"a"}}],["/code/upupor/Books.html",{loader:()=>i.e(1248).then(i.bind(i,4227)),meta:{d:1712997543e3,e:"\n<h3>围城</h3>\n<blockquote>\n<p>短片小说，2024/02 读完，读到结局意犹未尽感觉还有内容。。。故此翻书评</p>\n<p>感触深的是以下两处</p>\n</blockquote>\n<ul>\n<li><code>贫贱夫妻百事哀</code>出自元稹的《遣悲怀》，是元稹怀念亡妻所作，原意是我们做贫贱夫妻的每一件事情都会让我特别悲哀。 现在则多指，我们做贫贱夫妻的每一件事情都会让我特别悲哀，理解为<strong>夫妻没有稳定的经济基础</strong>。</li>\n<li>赵辛楣的一句‘<code>你不讨厌，可是全无用处</code>’不知刺痛了多少人的心\n<ul>\n<li>翻看方鸿渐的求学履历、工作履历，方鸿渐给我的印象就是——无头苍蝇乱撞。方鸿渐总是被动地去接受，没有主动地去争取过什么，因为他压根儿就没有梦想，这样的人，总是选简单的路走，然后，路越走越窄。</li>\n</ul>\n</li>\n</ul>",r:{minutes:1.12,words:337},t:"Book",y:"a"}}],["/code/upupor/FirstYear.html",{loader:()=>i.e(3021).then(i.bind(i,8180)),meta:{d:1712997543e3,e:'\n<h2><a class="header-anchor" href="#東京大学入学式-上野千鹤子致辞-努力就会有回报吗-你们将面对的是一个不公、无解的世界"><span></span></a><a href="https://www.bilibili.com/video/BV1T7411f7xu/?spm_id_from=333.999.0.0&amp;vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0" target="_blank" rel="noopener noreferrer">東京大学入学式-上野千鹤子致辞-努力就会有回报吗？你们将面对的是一个不公、无解的世界</a></h2>',r:{minutes:1.2,words:359},t:"心态",y:"a"}}],["/code/upupor/upupor.html",{loader:()=>i.e(1241).then(i.bind(i,6086)),meta:{d:1712997543e3,e:'\n<p>https://eco.upupor.com/upupor/</p>\n<p>可以看这个网址，记录作者对这个Blog的很多思路。。。。包括MinIO、mysql的备份，以及服务的部署！</p>\n<figure><img src="https://eco.upupor.com/assets/upupor-architecture.c16039e8.svg" alt="https://eco.upupor.com/assets/upupor-architecture.c16039e8.svg" tabindex="0" loading="lazy"><figcaption>https://eco.upupor.com/assets/upupor-architecture.c16039e8.svg</figcaption></figure>',r:{minutes:9.99,words:2998},t:"upuporStudy",y:"a"}}],["/code/408-PC/Software/Clash.html",{loader:()=>i.e(6346).then(i.bind(i,5883)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>Clash的 config.yml 配置文件也可以直接导入到 <code>Shadowrocket</code> !</p>\n</blockquote>\n<p>场景：把 config.yml 导入到 Profiles 选中报错 (我想公司一份，全局一份好切换 个性配置)，这时候对这个文件里的所有点进行了检查</p>\n<ul>\n<li>机场默认给的是 base64 的订阅地址，proxy-providers 配置 url 的时候需要在订阅地址后加上 <code>&amp;flag=clash</code> 换成文件</li>\n<li>如果报错那可能是订阅不新，拉不下来。。使用最新的订阅地址   默认拉下来会在 .config\\clash\\providers\\proxy 生成一个对应的文件\n<ul>\n<li>换完新的订阅，记得重启一下 Clash 不然老是报错 <code>all DNS requests failed, first error: Post "https://rubyfish.cn/dns-query": tls: failed to verify certificate: x509: certificate is valid for cloudaemon.rubyfish.cn, dns.rubyfish.cn, not rubyfish.cn</code></li>\n</ul>\n</li>\n</ul>',r:{minutes:.63,words:189},t:"Clash",y:"a"}}],["/code/408-PC/Software/IdeaShortcutKey.html",{loader:()=>i.e(9915).then(i.bind(i,7039)),meta:{d:1712997543e3,e:"\n<h4><code>ctrl+[ ctrl+]</code> 可以快速跳转到方法大括号的起止位置，配合方法分隔符使用，不怕找不到方法在哪儿分割了</h4>\n<h4>Shift+alt+左键 可以和 sublime 一样多个光标</h4>\n<h4>ctrl+m 滚动到光标所在行</h4>\n<h4><mark>条件断点、异常断点好用（停在异常抛出前，有问题的那一行代码）</mark></h4>\n<h4>idea ctrl shift f 整理代码！！</h4>\n<h4>ctrl+o查看类中所有的方法！！</h4>\n<h4>先写输出语句括号里要输出的，再.sout试一下还有.if！！！</h4>\n",r:{minutes:2.3,words:689},t:"idea",y:"a"}}],["/code/ZOther/Abandon_Project/%E5%B0%9A%E4%B8%8A%E4%BC%98%E9%80%89_Abandon.html",{loader:()=>i.e(7238).then(i.bind(i,466)),meta:{d:1712997543e3,e:"\n<blockquote>\n<p>41h/3=14   2_week    尚上优选类似多多买菜、美团优选    230910 END+++   Fighting？</p>\n<p>依托社区和团长社交关系实现生鲜商品流通的新零售模式</p>\n</blockquote>\n<h1>一、准备-配置</h1>\n<h3>1.knife4j</h3>\n<blockquote>\n<p>knife4j &gt; swagger2 里面有它的jar是它的增强版</p>\n</blockquote>\n<p>@Bean return Docket.class 这样是为了分组    例如后台系统一个，用户前台一个</p>",r:{minutes:2.36,words:709},t:"尚上优选",y:"a"}}],["/code/ZOther/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3%E5%8F%AF%E4%BB%A5%E6%94%BB%E7%8E%89/2020%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%89%BE%E5%B7%A5%E4%BD%9C%E6%8C%87%E5%8D%97.html",{loader:()=>i.e(9508).then(i.bind(i,4868)),meta:{d:1712997543e3,e:"\n<h2>术语科普</h2>\n<p>hc，headcount，人头数，表示计划招聘的人员的个数，例句</p>\n<blockquote>\n<p>今年的 hc 很充足。</p>\n</blockquote>\n<p>jd，job description，工作描述，例句</p>\n<blockquote>\n<p>发个 jd 给我看看吧。</p>\n</blockquote>\n<p>offer，录取意向，offer 分为口头 offer 和书面 offer，一般书面 offer 才算是正式 offer，例句</p>\n<blockquote>\n<p>他今年拿 offer 拿到手软。</p>\n</blockquote>",r:{minutes:11.15,words:3346},t:"2020 程序员找工作指南",y:"a"}}],["/code/ZOther/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3%E5%8F%AF%E4%BB%A5%E6%94%BB%E7%8E%89/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BB%A5%20Java%20%E4%B8%BA%E4%BE%8B%EF%BC%89.html",{loader:()=>i.e(9331).then(i.bind(i,9453)),meta:{d:1712997543e3,e:"\n<h3>文章的整体思路</h3>\n<p>这篇文章大体上会从以下几个部分展开：</p>\n<ul>\n<li>认清自己。</li>\n<li>学习目的。</li>\n<li>时间管理。</li>\n<li>学习方法。\n<ul>\n<li>学习的步骤。</li>\n<li>获取知识的途径</li>\n</ul>\n</li>\n<li>影响学习的几个因素\n<ul>\n<li>自己的心态。</li>\n<li>外物的影响。</li>\n</ul>\n</li>\n<li>其他想说的\n<ul>\n<li>大学生的学习</li>\n<li>一些感悟</li>\n</ul>\n</li>\n</ul>\n<h3>一、认清自己</h3>\n<h4>1.1</h4>",r:{minutes:28.57,words:8570},t:"程序员如何高效学习（以 Java 为例）",y:"a"}}],["/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/5am-Project.html",{loader:()=>i.e(8502).then(i.bind(i,4426)),meta:{d:1712997543e3,e:"\n<h2>https://www.youtube.com/watch?v=4zXTyc2ZjXM</h2>\n<blockquote>\n<p>xd: 5.起床适用于有工作的人，没工作的好像并无必要</p>\n</blockquote>\n<p>早起与成功</p>\n<p>意志力不行❌ 长立志、立长志☑️</p>\n<p>一、早起奥义1</p>\n<p>关注的点在早起要做的事，而非早起本身</p>\n<p>二、奥义2:早起是和时间进行“田忌赛马”</p>\n<p>1.每天的生活像抱着一个空罐子赛跑，而每天都要冲刺一百米，那么从早晨的空罐子到晚上的空罐子，渐渐装满，然后从第二天又重新开始。其实下班后的时间都是垃圾时间，因为已经消耗人的精力了，现代人会无限延长垃圾时间。</p>",r:{minutes:1.91,words:572},t:"5-AM",y:"a"}}],["/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/Chrome%E4%B9%A6%E7%AD%BE%E8%A2%AB%E5%8A%AB%E6%8C%81.html",{loader:()=>i.e(1640).then(i.bind(i,9319)),meta:{d:1712997543e3,e:"\n<h1>缘由</h1>\n<p>今天想到网上下一个软件，原本我以为自己把握的住结果还是着了它的道。下完之后浏览器一顿跳。我对此很敏感我知道我肯定中招了，果不其然我打开一看浏览器的url全被换了只要是有知名度的像bilibili百度都被换了，换成它的网站由它进行重定向。我试着打开它给的淘宝点进去给我重定向到了淘宝但是后面有pid。</p>\n<h2>逼逼赖赖</h2>\n<p>它劫持后给的域名统一是  piefeng.cn/</p>\n<p>我在这里下的软件  http://www.xue51.com/soft/6020.html</p>\n<h1>解决方案</h1>\n<p>我找了很多解决方案，甚至生硬的一个个重新添加回来。</p>",r:{minutes:.76,words:229},t:"Chrome书签被劫持",y:"a"}}],["/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/Kali%20%E7%A0%B4%E8%A7%A3%20WIFI.html",{loader:()=>i.e(8098).then(i.bind(i,4223)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>经过实践可行 , 但成功与否取决于字典</p>\n<p>需要虚拟机+指定外接网卡(淘宝)</p>\n</blockquote>\n<figure><img src="https://gitee.com/codezzq/blogImage/raw/master/img/IMG_2708(20220402-193141).JPG" alt="IMG_2708(20220402-193141)" tabindex="0" loading="lazy"><figcaption>IMG_2708(20220402-193141)</figcaption></figure>\n<p>Kali镜像:  http://old.kali.org/kali-images/</p>',r:{minutes:.19,words:57},t:"Kali 破解 WIFI",y:"a"}}],["/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/ShareList%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98.html",{loader:()=>i.e(8595).then(i.bind(i,2249)),meta:{d:1712997543e3,e:"<blockquote>\n<p>2022/2/21</p>\n<p>起因是看到别人博客搞了个文件系统很多文件且文件很大，兴趣就来了。经过了解发现是挂载了阿里云盘，用的ShareList技术。</p>\n<p>于是乎我也想整一个。昨天折腾了一下午换来了一个501，今天终于弄好了。</p>\n</blockquote>\n<h1>ShareList挂载阿里云盘</h1>\n<h2>一、操作</h2>\n<p>找了很多篇文章，踩了很多坑。用了docker，用了宝塔，也自己试着二进制装跑bash。结果都没能达成目的。折腾了半天结果发现有大佬开发的一键脚本。</p>\n<p>真正让我成功的是这篇文章：</p>\n<p>https://media.cooluc.com/source/sharelist</p>",r:{minutes:1.05,words:316},t:"ShareList挂载阿里云盘",y:"a"}}],["/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/VuePress.html",{loader:()=>i.e(9216).then(i.bind(i,9061)),meta:{d:1717209768e3,e:'\n<blockquote>\n<p>一个具有强大功能的 vuepress 主题✨</p>\n<p>之前我是用 Docify 做自己的 <mark>笔记 静态网站</mark></p>\n<p>但是 1）没有笔记目录 2）而且 JavaGuide 逛多了 希望搞个一样的</p>\n<p>后续：发现一个<a href="https://newzone.top/web/docsify.html" target="_blank" rel="noopener noreferrer">大佬</a></p>\n</blockquote>\n<h2>Feature</h2>\n<ul>\n<li>md 里面可以写 js+vue 语法 会渲染到页面   具体参考demo     【真牛】</li>\n<li>md 加 frontmatter 设置各种参数 icon、title</li>\n</ul>',r:{minutes:2.08,words:625},t:"VuePress Theme Hope",y:"a"}}],["/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/%E5%A4%A9%E5%A4%A9%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84%E8%BD%AF%E7%A1%AC%E4%BB%B6.html",{loader:()=>i.e(3129).then(i.bind(i,3193)),meta:{d:1712997543e3,e:'\n<h1>WGestures 2：</h1>\n<p>推荐一下 <a href="https://www.yingdev.com/projects/WGestures2" target="_blank" rel="noopener noreferrer">WGestures 2</a> 这一款手势软件，我从1开始用，用了很久很久了估摸着也有4-5年了。这款软件的自己的使用习惯配置文件也放在我的网盘里<a href="https://share.1024zzq.com/" target="_blank" rel="noopener noreferrer">1024zzqの宝库</a>。还是值得安利的。对我而言是可以大大提高我的办公学习效率让我觉得爽的一款软件的！</p>',r:{minutes:3.6,words:1081},t:"天天都在用的软硬件",y:"a"}}],["/code/ZOther/Abandon_Project/SpringGeekbang/Spring.html",{loader:()=>i.e(282).then(i.bind(i,1164)),meta:{d:1712997543e3,e:'\n<blockquote>\n<p>进 title link 看课程目录、课程介绍</p>\n</blockquote>\n<p>平板问题：</p>\n<p>springboot datasource自动装配mysql数据源。。h2为什么不用配数据源</p>\n<blockquote>\n<p>项目需要有自己的parel如何处置springboot的parent</p>\n</blockquote>\n<p>spring-boot-dependencies 放到 &lt;denpendencyManagement&gt;</p>\n<img src="https://images.zzq8.cn/img/202302231452941.png" alt="image-20230223145242628" style="zoom: 25%;">',r:{minutes:1.55,words:464},t:"玩转 Spring 全家桶",y:"a"}}],["/404.html",{loader:()=>i.e(7490).then(i.bind(i,9875)),meta:{t:""}}],["/posts/",{loader:()=>i.e(8666).then(i.bind(i,3371)),meta:{t:"Posts"}}],["/code/",{loader:()=>i.e(738).then(i.bind(i,5125)),meta:{t:"Code"}}],["/code/408-DSA/",{loader:()=>i.e(7868).then(i.bind(i,9208)),meta:{t:"408 DSA"}}],["/code/408-Network/",{loader:()=>i.e(1138).then(i.bind(i,2096)),meta:{t:"408 Network"}}],["/code/408-PC/",{loader:()=>i.e(7061).then(i.bind(i,6728)),meta:{t:"408 PC"}}],["/code/DistributedLock/",{loader:()=>i.e(971).then(i.bind(i,8275)),meta:{t:"Distributed Lock"}}],["/code/GuliMall/",{loader:()=>i.e(982).then(i.bind(i,2707)),meta:{t:"Guli Mall"}}],["/code/JUC/",{loader:()=>i.e(7835).then(i.bind(i,533)),meta:{t:"JUC"}}],["/code/JVM/",{loader:()=>i.e(8310).then(i.bind(i,5796)),meta:{t:"JVM"}}],["/code/JavaFramework/",{loader:()=>i.e(81).then(i.bind(i,1523)),meta:{t:"Java Framework"}}],["/code/JavaSE/",{loader:()=>i.e(383).then(i.bind(i,1149)),meta:{t:"Java SE"}}],["/code/Linux/",{loader:()=>i.e(2631).then(i.bind(i,4275)),meta:{t:"Linux"}}],["/code/MQ/",{loader:()=>i.e(8449).then(i.bind(i,8634)),meta:{t:"MQ"}}],["/code/NoSQL/",{loader:()=>i.e(6612).then(i.bind(i,7943)),meta:{t:"No SQL"}}],["/code/RuoYi/",{loader:()=>i.e(5541).then(i.bind(i,9220)),meta:{t:"Ruo Yi"}}],["/code/SQL/",{loader:()=>i.e(4957).then(i.bind(i,2147)),meta:{t:"SQL"}}],["/code/ZOther/",{loader:()=>i.e(1631).then(i.bind(i,5474)),meta:{t:"ZOther"}}],["/code/upupor/",{loader:()=>i.e(2750).then(i.bind(i,8671)),meta:{t:"Upupor"}}],["/code/408-PC/Software/",{loader:()=>i.e(6255).then(i.bind(i,4587)),meta:{t:"Software"}}],["/code/ZOther/Abandon_Project/",{loader:()=>i.e(1135).then(i.bind(i,7027)),meta:{t:"Abandon Project"}}],["/code/ZOther/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3%E5%8F%AF%E4%BB%A5%E6%94%BB%E7%8E%89/",{loader:()=>i.e(1867).then(i.bind(i,264)),meta:{t:"他山之石可以攻玉"}}],["/code/ZOther/%E7%BD%91%E4%B8%8A%E5%86%B2%E6%B5%AA/",{loader:()=>i.e(8855).then(i.bind(i,6799)),meta:{t:"网上冲浪"}}],["/code/ZOther/Abandon_Project/SpringGeekbang/",{loader:()=>i.e(5799).then(i.bind(i,7672)),meta:{t:"Spring Geekbang"}}],["/category/",{loader:()=>i.e(3583).then(i.bind(i,5944)),meta:{t:"分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>i.e(4021).then(i.bind(i,3771)),meta:{t:"使用指南 分类",I:!1}}],["/category/%E5%B7%A5%E5%85%B7/",{loader:()=>i.e(7968).then(i.bind(i,2973)),meta:{t:"工具 分类",I:!1}}],["/tag/",{loader:()=>i.e(1797).then(i.bind(i,3494)),meta:{t:"标签",I:!1}}],["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>i.e(602).then(i.bind(i,3529)),meta:{t:"标签: 页面配置",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>i.e(1431).then(i.bind(i,6941)),meta:{t:"标签: 使用指南",I:!1}}],["/article/",{loader:()=>i.e(7511).then(i.bind(i,4027)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>i.e(7199).then(i.bind(i,4139)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>i.e(5464).then(i.bind(i,1825)),meta:{t:"时间轴",I:!1}}]])},9354:(e,n,i)=>{i.d(n,{U:()=>t});const t=JSON.parse('{"base":"/","lang":"zh-CN","title":"Piglet","description":"自我提升笔记，记录并输出一切能让自己提升的知识。","head":[["link",{"rel":"alternate","type":"application/atom+xml","href":"https://doc.zzq8.cn/atom.xml","title":"Piglet Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://doc.zzq8.cn/feed.json","title":"Piglet JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://doc.zzq8.cn/rss.xml","title":"Piglet RSS Feed"}],["link",{"rel":"icon","href":"/favicon.ico"}]],"locales":{}}')},8120:(e,n,i)=>{i.d(n,{K:()=>t});const t=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$si.9iUGHxlQ9Yv/KY7gvNO/X.UIortMpVE2rbk3SMOyxF/yt0Ej7y"],"/daily":["$2a$10$4W1hfcYfms5BGXkpD4Guu.wV6hGq6Gd5uce0JFS18T28GieAuaUWW","$2a$10$3Yy2M2tJ0u.4w/5SCylygeQ.0lYsigYMGuKnGcg.txe.vdmxEvh46","$2a$10$FscxHUVJwERUOxEP6DlyZu4HpxpTDpKXnNQ2Xvb6HcEgfgznoq3Ha"],"/studynotes/ZOther/StudyList.html":["$2a$10$h82inanFdp2zq5L/c0BfWOB0sLs7VlbmXtjTCBynMIGUwZwJns5Ba"]}},"author":{"name":"Piglet","url":"https://newzone.top"},"logo":"/logo.svg","license":"CC BY-NC-ND 4.0","copyright":"\\n  版权声明：自由转载 - 非商用 - 非衍生 - 保持署名<a href=\\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh-hans\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">（创意共享 4.0 许可证）</a>|\\n  Copyright © 2023-present Piglet</a>\\n  ","displayFooter":true,"breadcrumb":false,"contributors":false,"lastUpdated":true,"editLink":false,"darkmode":"switch","fullscreen":true,"repo":"https://github.com/zzq8/zzq8","repoLabel":"GitHub","repoDisplay":true,"docsDir":"docs","navbarLayout":{"start":["Brand"],"center":["Links"],"end":["SocialLink","Repo","Outlook","Search"]},"pageInfo":["Category","Tag","Word","ReadingTime","PageView"],"blog":{"articleInfo":["Date","PageView","Category","Tag","ReadingTime"],"name":"Piglet","avatar":"/logo.png","description":"热爱倒腾","intro":"/intro.html","medias":{"Email":"mailto:547061946@qq.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"浮生杂记","icon":"fa-solid fa-fish","link":"/blog"},{"text":"代码笔记","icon":"fa-solid fa-code","link":"/code/"},{"text":"资源宝库","icon":"book","prefix":"/resources/","children":[{"text":"书籍资源","icon":"book-open","link":"books/"},{"text":"影音资源","icon":"play","link":"videos/"},{"text":"Demo","icon":"fa-solid fa-handshake","link":"demo/"}]},{"text":"网站相关","icon":"id-card","children":[{"text":"关于作者","icon":"user","link":"/about-the-author/"},{"text":"更新历史","icon":"history","link":"/timeline/"}]}],"sidebar":{"":[{"text":"代码编程","icon":"fa-solid fa-code","prefix":"/code/","children":"structure"},{"text":"博客文章","icon":"fa-solid fa-feather-pointed","prefix":"/_posts/","link":"/blog","collapsible":true,"children":"structure"}]}}}}')},1878:(e,n,i)=>{i.d(n,{v:()=>t});const t={"/code/":["TODO",{text:"408 DSA",prefix:"408-DSA/",collapsible:!0,children:["快排（分治思想）"]},{text:"408 Network",prefix:"408-Network/",collapsible:!0,children:["HttpRequest","JWT","计网问题（待解决）","Nginx"]},{text:"408 PC",prefix:"408-PC/",collapsible:!0,children:["MacOS",{text:"Software",prefix:"Software/",collapsible:!0,children:["Clash","IdeaShortcutKey"]},"/code/408-PC/Windows_Software.html","WTG (WindowsToGo)","计组原"]},{text:"Distributed Lock",prefix:"DistributedLock/",collapsible:!0,children:["DistributedLock"]},{text:"Guli Mall",prefix:"GuliMall/",collapsible:!0,children:["Advanced","Basic","ElasticSearch"]},{text:"Java Framework",prefix:"JavaFramework/",collapsible:!0,children:["MyBatis","SpringBoot","SpringCloud","SpringIntegration","SpringSecurity"]},{text:"Java SE",prefix:"JavaSE/",collapsible:!0,children:["Interview-Java核心技术面试精讲","Interview-尚硅谷经典Java面试题第一季","Planet-JavaGuide","JavaSE","Lambda","Steam"]},{text:"JUC",prefix:"JUC/",collapsible:!0,children:["JUC"]},{text:"JVM",prefix:"JVM/",collapsible:!0,children:["JVM"]},{text:"Linux",prefix:"Linux/",collapsible:!0,children:["LinuxDevEnv","LinuxRef"]},{text:"MQ",prefix:"MQ/",collapsible:!0,children:["RabbitMQ"]},{text:"No SQL",prefix:"NoSQL/",collapsible:!0,children:["Redis","RedisAdvanced"]},{text:"Ruo Yi",prefix:"RuoYi/",collapsible:!0,children:["RuoYi"]},{text:"SQL",prefix:"SQL/",collapsible:!0,children:["MySQL实战45讲","/code/SQL/Mysql%E7%B4%A2%E5%BC%95_%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93.html"]},"StudyList",{text:"Upupor",prefix:"upupor/",collapsible:!0,children:["Books","upupor","FirstYear"]},{text:"ZOther",prefix:"ZOther/",collapsible:!0,children:[{text:"Abandon Project",prefix:"Abandon_Project/",collapsible:!0,children:[{text:"Spring Geekbang",prefix:"SpringGeekbang/",collapsible:!0,children:["Spring"]},"尚上优选_Abandon"]},"/code/ZOther/Git_SVN.html","GitHubActions","Maven","Regexr",{text:"他山之石可以攻玉",prefix:"他山之石可以攻玉/",collapsible:!0,children:["2020 程序员找工作指南","程序员如何高效学习（以 Java 为例）"]},"FrontEnd",{text:"网上冲浪",prefix:"网上冲浪/",collapsible:!0,children:["5am-Project","Chrome书签被劫持","Kali 破解 WIFI","ShareList挂载阿里云盘","VuePress","天天都在用的软硬件"]}]}],"/_posts/":["/posts/2024-03-01-blog_example.html","/posts/2024-03-02-blog_example2.html"]}},8047:(e,n,i)=>{i.d(n,{P:()=>t});const t={Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>'}}},e=>{e.O(0,[3546,4425],(()=>(1007,e(e.s=1007)))),e.O()}]);