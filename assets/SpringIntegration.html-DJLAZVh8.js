import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as i,c as o,e as n,f as e,b as r,a as p}from"./app-DaaMDlup.js";const l={},c=n("h1",{id:"springintegration",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#springintegration"},[n("span",null,"SpringIntegration")])],-1),g={href:"https://www.bilibili.com/video/BV1Ak4y1k7B6/?spm_id_from=333.337.search-card.all.click&vd_source=0f3bf62c50d57c4a7d85b89b4d2633e0",target:"_blank",rel:"noopener noreferrer"},d=p(`<h2 id="一、应用集成模式与概念" tabindex="-1"><a class="header-anchor" href="#一、应用集成模式与概念"><span>一、应用集成模式与概念</span></a></h2><h5 id="常见集成模式" tabindex="-1"><a class="header-anchor" href="#常见集成模式"><span>常见集成模式：</span></a></h5><ol><li>通过文件传输的形式（保障平台 - ERP通过xml）File Transfer &lt;FTP&gt;</li><li>通过接口远程方法调用怕【WMS常用 -return json POJO到对方系统去保存Yigo】 &lt;HTTP&gt;</li><li>共享公共数据库方式，同1的文件传输类似通过外部【WMS也用 -保存到Yigo2-】 &lt;JDBC-API&gt;</li><li>通过Event到消息总线，相互发消息</li></ol><img src="http://images.zzq8.cn/img/image-20240307102045296.png" alt="image-20240307102045296" style="zoom:33%;"><p>ps: 最推崇的 = Messaging（和Spring事件驱动，消息中间件松耦合的概念十分相似）</p><ul><li>ABC相互之间可以完全不知道对方的，只需要去Message Bus消费自己需要的Event就行</li></ul><h5 id="两个系统之间架设通道大致流程" tabindex="-1"><a class="header-anchor" href="#两个系统之间架设通道大致流程"><span>两个系统之间架设通道大致流程：</span></a></h5><p>Endpoint 可以是FTP从FTP服务器拿文件塞进Interation，也可以是HTTP 【封装成一个个的 Message 格式】进入到下方的消息管道</p><p>Channel(消息通道) -&gt; Filter(管道过滤器对传递消息处理，使符合接收方要求)还有些特别的Filter（Translator/Router）</p><img src="http://images.zzq8.cn/img/image-20240307104731864.png" alt="image-20240307104731864" style="zoom:50%;"><h2 id="二、springintegration" tabindex="-1"><a class="header-anchor" href="#二、springintegration"><span>二、SpringIntegration</span></a></h2><p>与上面ERP概念模型小区别是，输入输出的头尾两端的Message Endpoint是算Filters</p><p>是轻量级的消息传递机制</p><p>adapters（适配器）</p><p>remoting</p><p>messaging（=header + payload）</p><ul><li><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Message</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
	<span class="token class-name">T</span> <span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">MessageHeaders</span> <span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>scheduling</p><p>message - message channel</p><p>Message Transformer</p>`,20);function m(u,h){const a=s("ExternalLinkIcon");return i(),o("div",null,[c,n("blockquote",null,[n("p",null,[n("a",g,[e("视频讲的特好"),r(a)]),e(" 应用集成模式与概念 两个系统，独立开发 独立运行的 系统集成")])]),d])}const v=t(l,[["render",m],["__file","SpringIntegration.html.vue"]]),T=JSON.parse('{"path":"/studynotes/JavaFramework/SpringIntegration.html","title":"SpringIntegration","lang":"zh-CN","frontmatter":{"description":"SpringIntegration 视频讲的特好 应用集成模式与概念 两个系统，独立开发 独立运行的 系统集成 一、应用集成模式与概念 常见集成模式： 通过文件传输的形式（保障平台 - ERP通过xml）File Transfer <FTP> 通过接口远程方法调用怕【WMS常用 -return json POJO到对方系统去保存Yigo】 <HTTP>...","head":[["meta",{"property":"og:url","content":"https://doc.zzq8.cn/studynotes/JavaFramework/SpringIntegration.html"}],["meta",{"property":"og:site_name","content":"Zz"}],["meta",{"property":"og:title","content":"SpringIntegration"}],["meta",{"property":"og:description","content":"SpringIntegration 视频讲的特好 应用集成模式与概念 两个系统，独立开发 独立运行的 系统集成 一、应用集成模式与概念 常见集成模式： 通过文件传输的形式（保障平台 - ERP通过xml）File Transfer <FTP> 通过接口远程方法调用怕【WMS常用 -return json POJO到对方系统去保存Yigo】 <HTTP>..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-18T10:21:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-18T10:21:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringIntegration\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-18T10:21:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、应用集成模式与概念","slug":"一、应用集成模式与概念","link":"#一、应用集成模式与概念","children":[]},{"level":2,"title":"二、SpringIntegration","slug":"二、springintegration","link":"#二、springintegration","children":[]}],"git":{"createdTime":1712997543000,"updatedTime":1716027716000,"contributors":[{"name":"Fighting","email":"1024zzq@gmail.com","commits":2},{"name":"MiniPC","email":"1024zzq@gmail.com","commits":1}]},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"studynotes/JavaFramework/SpringIntegration.md","localizedDate":"2024年4月13日","autoDesc":true}');export{v as comp,T as data};
