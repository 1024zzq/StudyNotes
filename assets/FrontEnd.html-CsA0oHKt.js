import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as c,a as n}from"./app-WwDGEYed.js";const d={},t=n('<h1 id="大前端" tabindex="-1"><a class="header-anchor" href="#大前端"><span>大前端</span></a></h1><h2 id="vue" tabindex="-1"><a class="header-anchor" href="#vue"><span>Vue</span></a></h2><p>vue项目中package.json文件的dependencies和devDependencies有什么区别</p><ul><li><code>dependencies</code> 中的包是项目运行时必需的核心依赖，而 <code>devDependencies</code> 中的包是开发过程中使用的辅助依赖。</li><li>生产环境部署时，只需要安装 <code>dependencies</code> 中的包，而开发环境需要安装 <code>dependencies</code> 和 <code>devDependencies</code> 中的包。</li></ul><h2 id="npm" tabindex="-1"><a class="header-anchor" href="#npm"><span>npm</span></a></h2><blockquote><p>corepack enable作用</p></blockquote><p>Corepack 是一个用于增强 npm 的包管理器，它提供了更快的安装速度和更好的本地缓存功能。启用 Corepack 后，它将替代标准的 npm 命令，并提供更快速的包安装和更好的缓存管理。</p><p>一旦你在项目中运行了 <code>corepack enable</code>，之后执行的所有 <code>npm</code> 命令都将由 Corepack 处理。这包括 <code>npm install</code>、<code>npm ci</code>、<code>npm update</code> 等等。Corepack 将自动管理你的本地缓存，以便在安装依赖时提供更快的速度，并且会在必要时自动下载缺失的包。</p><p>总的来说，<code>corepack enable</code> 的作用是在你的项目中启用 Corepack，以提高 npm 命令的性能和效率。</p><blockquote><p>npm ci作用</p></blockquote><ol><li><strong>安装速度</strong>：<code>npm ci</code> 比 <code>npm install</code> 更快。<code>npm ci</code> 会跳过生成依赖树和解决依赖版本的步骤，而直接使用 <code>package-lock.json</code>（或 <code>npm-shrinkwrap.json</code>）文件中的精确版本信息来安装依赖项。因此，它通常比 <code>npm install</code> 更快。</li><li><strong>依赖版本的确定性</strong>：<code>npm ci</code> 确保安装的依赖版本与 <code>package-lock.json</code> 中指定的一致。它会忽略 <code>package.json</code> 中的版本范围，并始终安装 <code>package-lock.json</code> 中指定的确切版本。这种确定性有助于在不同的环境中保持依赖的一致性，尤其是在持续集成和部署过程中。</li></ol><blockquote><p>&quot;@vuepress/plugin-sitemap&quot;: &quot;^2.0.0-rc.30&quot;</p></blockquote><p>你也可以使用 <code>^</code> 或 <code>~</code> 符号来指定一个范围，例如：</p><ul><li><code>^1.2.3</code>：允许安装 <code>1.x.x</code> 中最新的版本，但不包括 <code>2.0.0</code> 或更高的版本。</li><li><code>~1.2.3</code>：允许安装 <code>1.2.x</code> 中最新的版本，但不包括 <code>1.3.0</code> 或更高的版本。</li></ul><p>如果你只想更新包的次要版本或补丁版本，而不改变主要版本号，你可以使用 <code>^</code> 或 <code>~</code> 符号。如果你想更新到指定版本，可以直接指定版本号。</p><p>更新后，记得运行 <code>npm install</code> 或 <code>npm ci</code> 来安装更新后的依赖项。</p>',16),p=[t];function a(i,s){return c(),o("div",null,p)}const m=e(d,[["render",a],["__file","FrontEnd.html.vue"]]),u=JSON.parse('{"path":"/studynotes/ZOther/FrontEnd.html","title":"大前端","lang":"zh-CN","frontmatter":{"description":"大前端 Vue vue项目中package.json文件的dependencies和devDependencies有什么区别 dependencies 中的包是项目运行时必需的核心依赖，而 devDependencies 中的包是开发过程中使用的辅助依赖。 生产环境部署时，只需要安装 dependencies 中的包，而开发环境需要安装 depende...","head":[["meta",{"property":"og:url","content":"https://doc.zzq8.cn/studynotes/ZOther/FrontEnd.html"}],["meta",{"property":"og:site_name","content":"Piglet"}],["meta",{"property":"og:title","content":"大前端"}],["meta",{"property":"og:description","content":"大前端 Vue vue项目中package.json文件的dependencies和devDependencies有什么区别 dependencies 中的包是项目运行时必需的核心依赖，而 devDependencies 中的包是开发过程中使用的辅助依赖。 生产环境部署时，只需要安装 dependencies 中的包，而开发环境需要安装 depende..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-01T09:54:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-01T09:54:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大前端\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-01T09:54:27.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Vue","slug":"vue","link":"#vue","children":[]},{"level":2,"title":"npm","slug":"npm","link":"#npm","children":[]}],"git":{"createdTime":1717228958000,"updatedTime":1717235667000,"contributors":[{"name":"Fighting","email":"1024zzq@gmail.com","commits":2}]},"readingTime":{"minutes":1.93,"words":579},"filePathRelative":"studynotes/ZOther/FrontEnd.md","localizedDate":"2024年6月1日","autoDesc":true}');export{m as comp,u as data};
